name: Main

on:
  push:
      branches: [ master ]
  pull_request:
      branches: [ master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest

    steps:   
      - uses: actions/checkout@v5
        with:
          submodules: "recursive"

      - uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '6.0.x'

      - name: Print dotnet info
        run: dotnet --info      

      - name: Install Windows 10 SDK 19041
        shell: powershell
        run: |
          Write-Host "Installing Windows 10 SDK Build 19041 directly from Microsoft"
          
          # Download the Windows 10 SDK installer directly
          $sdkUrl = "https://go.microsoft.com/fwlink/?linkid=2120843"  # Windows 10 SDK 2004 (19041)
          $installerPath = "$env:TEMP\winsdksetup.exe"
          
          Write-Host "Downloading SDK installer..."
          Invoke-WebRequest -Uri $sdkUrl -OutFile $installerPath -UserAgent "Mozilla/5.0"
          
          Write-Host "Installing SDK silently..."
          # Install with minimal features - just what we need for building
          $process = Start-Process -FilePath $installerPath -ArgumentList "/quiet", "/norestart", "/features", "OptionId.WindowsPerformanceToolkit", "OptionId.WindowsDesktopDebuggers", "OptionId.AvrfExternal", "OptionId.NetFxSoftwareDevelopmentKit", "OptionId.WindowsSoftwareLogoToolkit", "OptionId.MSIInstallTools", "OptionId.SigningTools", "OptionId.UWPManaged", "OptionId.UWPCPP", "OptionId.UWPLocalized", "OptionId.DesktopCPPx86", "OptionId.DesktopCPPx64", "OptionId.DesktopCPParm", "OptionId.DesktopCPParm64" -Wait -PassThru
          
          Write-Host "SDK installer exit code: $($process.ExitCode)"
          Write-Host "Installation complete"
      
      - name: Verify Windows 10 SDK 19041
        shell: powershell
        run: |
          $sdkVersion = "10.0.19041.0"
          Write-Host "Verifying SDK $sdkVersion installation..."
          
          # Check if SDK files are actually installed
          $sdkPaths = @(
              "${env:ProgramFiles(x86)}\Windows Kits\10",
              "${env:ProgramFiles}\Windows Kits\10"
          )
          
          $sdkFound = $false
          foreach ($path in $sdkPaths) {
              if (Test-Path $path) {
                  Write-Host "Checking Windows Kits at: $path"
                  
                  $includeDir = Join-Path $path "Include\$sdkVersion"
                  $binDir = Join-Path $path "bin\$sdkVersion"
                  
                  Write-Host "Include dir exists: $(Test-Path $includeDir)"
                  Write-Host "Bin dir exists: $(Test-Path $binDir)"
                  
                  if ((Test-Path $includeDir) -and (Test-Path $binDir)) {
                      Write-Host "SUCCESS: SDK $sdkVersion files found!"
                      $sdkFound = $true
                      
                      # Show available versions for confirmation
                      $allVersions = Get-ChildItem (Join-Path $path "Include") -Directory | Where-Object { $_.Name -like "10.0.*" }
                      Write-Host "All available SDK versions:"
                      foreach ($version in $allVersions) {
                          $isNew = if ($version.Name -eq $sdkVersion) { " <- NEWLY INSTALLED" } else { "" }
                          Write-Host "  $($version.Name)$isNew"
                      }
                      break
                  }
              }
          }
          
          Write-Host "SDK $sdkVersion available: $sdkFound"
          echo "SDK_AVAILABLE=$sdkFound" >> $env:GITHUB_OUTPUT
        id: sdk-check

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.1'
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile --network-timeout 600000 install

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test
