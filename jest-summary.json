{
  "counts": {
    "failedSuites": 3,
    "failedTests": 2,
    "runtimeErrors": 2,
    "totalSuites": 72,
    "totalTests": 421
  },
  "summary": [
    {
      "file": "/Users/veland/Downloads/vortex/extensions/gamestore-ubisoft/test/index.test.ts",
      "status": "failed",
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96mextensions/gamestore-ubisoft/src/index.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2416: \u001b[0mProperty 'launchGame' in type 'UbisoftLauncher' is not assignable to the same property in base type 'IGameStore'.\n      Type '(appInfo: any, api?: IExtensionApi) => Promise<void>' is not assignable to type '(appId: any, api?: IExtensionApi) => Bluebird<void>'.\n        Type 'Promise<void>' is missing the following properties from type 'Bluebird<void>': caught, error, lastly, bind, and 38 more.\n\n    \u001b[7m74\u001b[0m   public launchGame(appInfo: any, api?: types.IExtensionApi): Promise<void> {\n    \u001b[7m  \u001b[0m \u001b[91m         ~~~~~~~~~~\u001b[0m\n    \u001b[96mextensions/gamestore-ubisoft/src/index.ts\u001b[0m:\u001b[93m90\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2416: \u001b[0mProperty 'allGames' in type 'UbisoftLauncher' is not assignable to the same property in base type 'IGameStore'.\n      Type '() => Promise<IGameStoreEntry[]>' is not assignable to type '() => Bluebird<IGameStoreEntry[]>'.\n        Type 'Promise<IGameStoreEntry[]>' is missing the following properties from type 'Bluebird<IGameStoreEntry[]>': caught, error, lastly, bind, and 38 more.\n\n    \u001b[7m90\u001b[0m   public allGames(): Promise<types.IGameStoreEntry[]> {\n    \u001b[7m  \u001b[0m \u001b[91m         ~~~~~~~~\u001b[0m\n    \u001b[96mextensions/gamestore-ubisoft/src/index.ts\u001b[0m:\u001b[93m97\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2416: \u001b[0mProperty 'reloadGames' in type 'UbisoftLauncher' is not assignable to the same property in base type 'IGameStore'.\n      Type '() => Promise<void>' is not assignable to type '() => Bluebird<void>'.\n        Type 'Promise<void>' is not assignable to type 'Bluebird<void>'.\n\n    \u001b[7m97\u001b[0m   public reloadGames(): Promise<void> {\n    \u001b[7m  \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n    \u001b[96mextensions/gamestore-ubisoft/src/index.ts\u001b[0m:\u001b[93m102\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2416: \u001b[0mProperty 'findByName' in type 'UbisoftLauncher' is not assignable to the same property in base type 'IGameStore'.\n      Type '(appName: string) => Promise<IGameStoreEntry>' is not assignable to type '(appName: string) => Bluebird<IGameStoreEntry>'.\n        Type 'Promise<IGameStoreEntry>' is missing the following properties from type 'Bluebird<IGameStoreEntry>': caught, error, lastly, bind, and 38 more.\n\n    \u001b[7m102\u001b[0m   public findByName(appName: string): Promise<types.IGameStoreEntry> {\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~\u001b[0m\n    \u001b[96mextensions/gamestore-ubisoft/src/index.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2416: \u001b[0mProperty 'findByAppId' in type 'UbisoftLauncher' is not assignable to the same property in base type 'IGameStore'.\n      Type '(appId: string | string[]) => Promise<IGameStoreEntry>' is not assignable to type '(appId: string | string[]) => Bluebird<IGameStoreEntry>'.\n        Type 'Promise<IGameStoreEntry>' is not assignable to type 'Bluebird<IGameStoreEntry>'.\n\n    \u001b[7m111\u001b[0m   public findByAppId(appId: string | string[]): Promise<types.IGameStoreEntry> {\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n    \u001b[96mextensions/gamestore-ubisoft/src/index.ts\u001b[0m:\u001b[93m128\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2416: \u001b[0mProperty 'getGameStorePath' in type 'UbisoftLauncher' is not assignable to the same property in base type 'IGameStore'.\n      Type '() => Promise<string>' is not assignable to type '() => Bluebird<string>'.\n        Type 'Promise<string>' is missing the following properties from type 'Bluebird<string>': caught, error, lastly, bind, and 38 more.\n\n    \u001b[7m128\u001b[0m   public getGameStorePath(): Promise<string> {\n    \u001b[7m   \u001b[0m \u001b[91m         ~~~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96mextensions/gamestore-ubisoft/src/index.ts\u001b[0m:\u001b[93m331\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2322: \u001b[0mType 'UbisoftLauncher' is not assignable to type 'IGameStore'.\n      Types of property 'allGames' are incompatible.\n        Type '() => Promise<IGameStoreEntry[]>' is not assignable to type '() => Bluebird<IGameStoreEntry[]>'.\n\n    \u001b[7m331\u001b[0m   const instance: types.IGameStore = new UbisoftLauncher();\n    \u001b[7m   \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n",
      "failed": []
    },
    {
      "file": "/Users/veland/Downloads/vortex/test/util/EpicGamesLauncher.test.ts",
      "status": "failed",
      "message": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    TypeError: (0 , lazyRequire_1.default) is not a function\n\n    \u001b[0m \u001b[90m 16 |\u001b[39m\n     \u001b[90m 17 |\u001b[39m \u001b[90m// Removed Bluebird alias to avoid TS2529 error with top-level Promise in async modules\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 |\u001b[39m \u001b[36mconst\u001b[39m winapi\u001b[33m:\u001b[39m \u001b[36mtypeof\u001b[39m winapiT \u001b[33m=\u001b[39m lazyRequire(() \u001b[33m=>\u001b[39m (isWindows() \u001b[33m?\u001b[39m require(\u001b[32m'winapi-bindings'\u001b[39m) \u001b[33m:\u001b[39m undefined))\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 19 |\u001b[39m\n     \u001b[90m 20 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mITEM_EXT\u001b[39m \u001b[33m=\u001b[39m \u001b[32m'.item'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mSTORE_ID\u001b[39m \u001b[33m=\u001b[39m \u001b[32m'epic'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/util/EpicGamesLauncher.ts\u001b[2m:18:43)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36mtest/util/EpicGamesLauncher.test.ts\u001b[39m\u001b[0m\u001b[2m:1:1)\u001b[22m\n",
      "failed": []
    },
    {
      "file": "/Users/veland/Downloads/vortex/extensions/gamestore-macappstore/test/index.test.ts",
      "status": "failed",
      "message": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMacAppStore › isLikelyGame › should identify games based on name patterns\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 67 |\u001b[39m     it(\u001b[32m'should identify games based on name patterns'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 68 |\u001b[39m       \u001b[90m// Test games that should be identified as games\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 69 |\u001b[39m       expect((macAppStore \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39misLikelyGame(\u001b[32m'Civilization VI'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Application'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m       expect((macAppStore \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39misLikelyGame(\u001b[32m'World of Warcraft'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Application'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 71 |\u001b[39m       expect((macAppStore \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39misLikelyGame(\u001b[32m'The Witcher 3'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Application'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m       expect((macAppStore \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39misLikelyGame(\u001b[32m'Halo 2'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Application'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mextensions/gamestore-macappstore/test/index.test.ts\u001b[39m\u001b[0m\u001b[2m:69:83)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mMacAppStore › getGameEntries › should return game entries when apps are found\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 6\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[32m-   \"appid\": \"com.aspyr.civ6\",\u001b[39m\n    \u001b[31m+   \"appid\": \"Civilization VI\u001b[39m\n    \u001b[31m+ com.aspyr.civ6\u001b[39m\n    \u001b[31m+ Game\",\u001b[39m\n    \u001b[2m    \"gamePath\": \"/Applications/Civilization VI.app\",\u001b[22m\n    \u001b[2m    \"gameStoreId\": \"macappstore\",\u001b[22m\n    \u001b[32m-   \"name\": \"Civilization VI\",\u001b[39m\n    \u001b[31m+   \"name\": \"Civilization VI\u001b[39m\n    \u001b[31m+ com.aspyr.civ6\u001b[39m\n    \u001b[31m+ Game\",\u001b[39m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 113 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m (macAppStore \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mgetGameEntries()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 115 |\u001b[39m       expect(result[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m         appid\u001b[33m:\u001b[39m \u001b[32m'com.aspyr.civ6'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 117 |\u001b[39m         name\u001b[33m:\u001b[39m \u001b[32m'Civilization VI'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 118 |\u001b[39m         gamePath\u001b[33m:\u001b[39m \u001b[32m'/Applications/Civilization VI.app'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mextensions/gamestore-macappstore/test/index.test.ts\u001b[39m\u001b[0m\u001b[2m:115:25)\u001b[22m\u001b[2m\u001b[22m\n",
      "failed": [
        {
          "title": "MacAppStore isLikelyGame should identify games based on name patterns",
          "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n"
        },
        {
          "title": "MacAppStore getGameEntries should return game entries when apps are found",
          "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n"
        }
      ]
    }
  ]
}