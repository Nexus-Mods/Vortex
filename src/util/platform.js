"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isWineAvailable = exports.getWineDriveCPath = exports.getWinePrefixPath = exports.normalizePath = exports.isPathCaseSensitive = exports.getDocumentsPath = exports.getHomeDirectory = exports.getAppDataPath = exports.platformSwitch = exports.getLineEnding = exports.getPathSeparator = exports.getExecutableExtension = exports.isUnix = exports.isLinux = exports.isMacOS = exports.isWindows = exports.getCurrentPlatform = void 0;
function getCurrentPlatform() {
    return process.platform;
}
exports.getCurrentPlatform = getCurrentPlatform;
function isWindows() {
    return process.platform === 'win32';
}
exports.isWindows = isWindows;
function isMacOS() {
    return process.platform === 'darwin';
}
exports.isMacOS = isMacOS;
function isLinux() {
    return process.platform === 'linux';
}
exports.isLinux = isLinux;
function isUnix() {
    return isMacOS() || isLinux();
}
exports.isUnix = isUnix;
function getExecutableExtension() {
    return isWindows() ? '.exe' : '';
}
exports.getExecutableExtension = getExecutableExtension;
function getPathSeparator() {
    return isWindows() ? '\\' : '/';
}
exports.getPathSeparator = getPathSeparator;
function getLineEnding() {
    return isWindows() ? '\r\n' : '\n';
}
exports.getLineEnding = getLineEnding;
function platformSwitch(options) {
    const platform = getCurrentPlatform();
    if (options[platform]) {
        return options[platform]();
    }
    if (options.default) {
        return options.default();
    }
    throw new Error(`No handler defined for platform: ${platform}`);
}
exports.platformSwitch = platformSwitch;
function getAppDataPath() {
    return platformSwitch({
        win32: () => process.env.APPDATA || '',
        darwin: () => process.env.HOME ? `${process.env.HOME}/Library/Application Support` : '',
        linux: () => process.env.XDG_CONFIG_HOME || (process.env.HOME ? `${process.env.HOME}/.config` : ''),
        default: () => ''
    });
}
exports.getAppDataPath = getAppDataPath;
function getHomeDirectory() {
    return process.env.HOME || process.env.USERPROFILE || '';
}
exports.getHomeDirectory = getHomeDirectory;
function getDocumentsPath() {
    return platformSwitch({
        win32: () => process.env.USERPROFILE ? `${process.env.USERPROFILE}\\Documents` : '',
        darwin: () => process.env.HOME ? `${process.env.HOME}/Documents` : '',
        linux: () => process.env.HOME ? `${process.env.HOME}/Documents` : '',
        default: () => ''
    });
}
exports.getDocumentsPath = getDocumentsPath;
function isPathCaseSensitive() {
    return !isWindows();
}
exports.isPathCaseSensitive = isPathCaseSensitive;
function normalizePath(inputPath) {
    if (isWindows()) {
        return inputPath.replace(/\//g, '\\');
    }
    else {
        return inputPath.replace(/\\/g, '/');
    }
}
exports.normalizePath = normalizePath;
function getWinePrefixPath() {
    if (!isLinux()) {
        return '';
    }
    return process.env.WINEPREFIX ||
        (process.env.HOME ? `${process.env.HOME}/.wine` : '');
}
exports.getWinePrefixPath = getWinePrefixPath;
function getWineDriveCPath() {
    if (!isLinux()) {
        return '';
    }
    const winePrefix = getWinePrefixPath();
    return winePrefix ? `${winePrefix}/drive_c` : '';
}
exports.getWineDriveCPath = getWineDriveCPath;
function isWineAvailable() {
    return isLinux() && !!getWinePrefixPath();
}
exports.isWineAvailable = isWineAvailable;
//# sourceMappingURL=data:application/json;base64,