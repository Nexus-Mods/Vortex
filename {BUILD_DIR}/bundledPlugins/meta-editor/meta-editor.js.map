{"version":3,"file":"index.js","mappings":"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","sources":["webpack://meta-editor/./src/actions.ts","webpack://meta-editor/./src/index.ts","webpack://meta-editor/./src/reducers.ts","webpack://meta-editor/./src/views/MetaEditorDialog.tsx","webpack://meta-editor/./src/views/RuleEditor.tsx","webpack://meta-editor/external commonjs2 \"immutability-helper\"","webpack://meta-editor/external commonjs2 \"modmeta-db\"","webpack://meta-editor/external commonjs2 \"path\"","webpack://meta-editor/external commonjs2 \"react\"","webpack://meta-editor/external commonjs2 \"react-bootstrap\"","webpack://meta-editor/external commonjs2 \"react-i18next\"","webpack://meta-editor/external commonjs2 \"react-redux\"","webpack://meta-editor/external commonjs2 \"redux-act\"","webpack://meta-editor/external commonjs2 \"semver\"","webpack://meta-editor/external node-commonjs \"url\"","webpack://meta-editor/external commonjs2 \"util\"","webpack://meta-editor/external commonjs2 \"vortex-api\"","webpack://meta-editor/webpack/bootstrap","webpack://meta-editor/webpack/before-startup","webpack://meta-editor/webpack/startup","webpack://meta-editor/webpack/after-startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setShowMetaEditor = void 0;\nconst redux_act_1 = require(\"redux-act\");\nexports.setShowMetaEditor = (0, redux_act_1.createAction)('SET_SHOW_METAEDITOR');\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MetaEditorDialog_1 = require(\"./views/MetaEditorDialog\");\nconst actions_1 = require(\"./actions\");\nconst reducers_1 = require(\"./reducers\");\nconst path = require(\"path\");\nconst semver = require(\"semver\");\nconst url = require(\"url\");\nconst util_1 = require(\"util\");\nconst vortex_api_1 = require(\"vortex-api\");\nfunction getEmptyData(filePath, fileInfo) {\n    const fileName = filePath !== undefined\n        ? path.basename(filePath, path.extname(filePath))\n        : '';\n    return {\n        fileName,\n        fileSizeBytes: fileInfo !== undefined ? fileInfo.size : 0,\n        gameId: fileInfo.game,\n        fileVersion: '',\n        fileMD5: fileInfo !== undefined ? fileInfo.fileMD5 : '',\n        sourceURI: '',\n        rules: [],\n        details: {},\n    };\n}\nfunction retrieveInfoImpl(api, downloadId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (downloadId === undefined) {\n            return undefined;\n        }\n        const state = api.getState();\n        const downloads = state.persistent.downloads.files;\n        const downloadPath = vortex_api_1.selectors.downloadPath(state);\n        if (downloads[downloadId].localPath === undefined) {\n            return undefined;\n        }\n        const filePath = path.join(downloadPath, downloads[downloadId].localPath);\n        api.sendNotification({\n            id: 'meta-lookup',\n            type: 'activity',\n            message: 'Mod lookup...',\n        });\n        try {\n            const info = yield api.lookupModMeta({\n                filePath,\n                fileMD5: downloads[downloadId].fileMD5,\n                fileSize: downloads[downloadId].size,\n                gameId: downloads[downloadId].game[0],\n            });\n            api.dismissNotification('meta-lookup');\n            if (info.length > 0) {\n                return Object.assign({ fileName: filePath, fileMD5: downloads[downloadId].fileMD5, fileSizeBytes: downloads[downloadId].size, gameId: downloads[downloadId].game }, info[0].value);\n            }\n        }\n        catch (err) {\n            (0, vortex_api_1.log)('info', 'Failed to look up mod meta information', { err: (0, util_1.inspect)(err) });\n            api.dismissNotification('meta-lookup');\n        }\n        return getEmptyData(filePath, downloads[downloadId]);\n    });\n}\nfunction validateVersion(version) {\n    return semver.valid(version) === null ? 'error' : 'success';\n}\nfunction validateURI(uri) {\n    return url.parse(uri).host === null ? 'error' : 'success';\n}\nfunction main(context) {\n    context.registerReducer(['session', 'metaEditor'], reducers_1.default);\n    const retrieveInfo = (visibleId) => retrieveInfoImpl(context.api, visibleId);\n    context.registerDialog('meta-editor-dialog', MetaEditorDialog_1.default, () => ({\n        retrieveInfo,\n        validateVersion,\n        validateURI,\n    }));\n    context.registerAction('downloads-action-icons', 100, 'edit', {}, 'View Meta Data', (instanceIds) => {\n        context.api.store.dispatch((0, actions_1.setShowMetaEditor)(instanceIds[0]));\n    }, (instanceIds) => {\n        const state = context.api.store.getState();\n        return state.persistent.downloads.files[instanceIds[0]].state === 'finished';\n    });\n    context.once(() => {\n        context.api.setStylesheet('meta-editor', path.join(__dirname, 'metaeditor.scss'));\n    });\n    return true;\n}\nexports.default = main;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vortex_api_1 = require(\"vortex-api\");\nconst actions = require(\"./actions\");\nconst sessionReducer = {\n    reducers: {\n        [actions.setShowMetaEditor]: (state, payload) => vortex_api_1.util.setSafe(state, ['showDialog'], payload),\n    },\n    defaults: {\n        showDialog: false,\n    },\n};\nexports.default = sessionReducer;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst actions_1 = require(\"../actions\");\nconst RuleEditor_1 = require(\"./RuleEditor\");\nconst immutability_helper_1 = require(\"immutability-helper\");\nconst React = require(\"react\");\nconst react_bootstrap_1 = require(\"react-bootstrap\");\nconst react_i18next_1 = require(\"react-i18next\");\nconst react_redux_1 = require(\"react-redux\");\nconst vortex_api_1 = require(\"vortex-api\");\nclass MetaEditorDialog extends vortex_api_1.ComponentEx {\n    constructor(props) {\n        super(props);\n        this.renderRule = (rule, index) => {\n            const { t } = this.props;\n            return (React.createElement(react_bootstrap_1.ListGroupItem, { key: `rule-${index}` },\n                rule.type,\n                \" - \",\n                this.renderReference(rule.reference),\n                React.createElement(\"div\", { className: 'rule-actions pull-right' },\n                    React.createElement(vortex_api_1.tooltip.Button, { id: `rule-${index}`, tooltip: t('Remove'), onClick: this.removeRule },\n                        React.createElement(vortex_api_1.Icon, { name: 'remove' })))));\n        };\n        this.renderReference = (reference) => {\n            if (reference.fileMD5 !== undefined) {\n                return reference.fileMD5;\n            }\n            else {\n                return `${reference.logicalFileName} - ${reference.versionMatch}`;\n            }\n        };\n        this.removeRule = (evt) => {\n            const idSegmented = evt.currentTarget.id.split('-');\n            const idx = idSegmented[idSegmented.length - 1];\n            this.setState((0, immutability_helper_1.default)(this.state, { info: {\n                    rules: { $splice: [[idx, 1]] },\n                } }));\n        };\n        this.addRule = (type, reference) => {\n            const rule = { type, reference };\n            this.setState(vortex_api_1.util.pushSafe(this.state, ['info', 'rules'], rule), () => {\n                this.hideRuleEditor();\n            });\n        };\n        this.save = () => {\n            this.context.api.saveModMeta(this.state.info);\n            this.close();\n        };\n        this.cancel = () => {\n            this.close();\n        };\n        this.showRuleEditor = () => {\n            this.setState((0, immutability_helper_1.default)(this.state, {\n                showRuleEditor: { $set: true },\n            }));\n        };\n        this.hideRuleEditor = () => {\n            this.setState((0, immutability_helper_1.default)(this.state, {\n                showRuleEditor: { $set: false },\n            }));\n        };\n        this.changeLogicalFileName = (event) => {\n            this.setField('logicalFileName', event.target.value);\n        };\n        this.changeFileVersion = (event) => {\n            this.setField('fileVersion', event.target.value);\n        };\n        this.changeSourceURI = (event) => {\n            this.setField('sourceURI', event.target.value);\n        };\n        this.close = () => {\n            this.props.onHide();\n        };\n        this.initState({\n            info: undefined,\n            showRuleEditor: false,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.visibleId !== prevProps.visibleId) {\n            this.triggerInfoUpdate(this.props.visibleId);\n        }\n    }\n    triggerInfoUpdate(visibleId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.nextState.info = yield this.props.retrieveInfo(visibleId);\n            }\n            catch (err) {\n                this.props.onShowError('failed to fetch mod info', err);\n            }\n        });\n    }\n    render() {\n        const { t, validateURI, validateVersion } = this.props;\n        const { info, showRuleEditor } = this.state;\n        if (info === undefined) {\n            return null;\n        }\n        const fvState = validateVersion(info.fileVersion);\n        const urlState = validateURI(info.sourceURI);\n        return (React.createElement(react_bootstrap_1.Modal, { show: info !== undefined, onHide: this.close },\n            React.createElement(react_bootstrap_1.Modal.Header, null,\n                React.createElement(react_bootstrap_1.Modal.Title, null, info.logicalFileName)),\n            React.createElement(react_bootstrap_1.Modal.Body, null,\n                React.createElement(\"form\", null,\n                    React.createElement(react_bootstrap_1.FormGroup, null,\n                        React.createElement(react_bootstrap_1.ControlLabel, null, t('File Name')),\n                        React.createElement(react_bootstrap_1.FormControl, { type: 'text', value: info.logicalFileName, onChange: this.changeLogicalFileName })),\n                    React.createElement(react_bootstrap_1.FormGroup, { validationState: fvState },\n                        React.createElement(react_bootstrap_1.ControlLabel, null, t('File Version')),\n                        React.createElement(react_bootstrap_1.FormControl, { type: 'text', value: info.fileVersion, onChange: this.changeFileVersion }),\n                        React.createElement(vortex_api_1.FormFeedback, null)),\n                    React.createElement(react_bootstrap_1.FormGroup, { validationState: urlState },\n                        React.createElement(react_bootstrap_1.ControlLabel, null, t('Source URL')),\n                        React.createElement(react_bootstrap_1.FormControl, { type: 'text', value: info.sourceURI, onChange: this.changeSourceURI }),\n                        React.createElement(vortex_api_1.FormFeedback, null)),\n                    React.createElement(react_bootstrap_1.FormGroup, null,\n                        React.createElement(react_bootstrap_1.ControlLabel, null,\n                            t('Rules'),\n                            ' ',\n                            React.createElement(vortex_api_1.tooltip.Button, { className: 'btn-embed', tooltip: t('Add'), id: 'add-rule', onClick: this.showRuleEditor },\n                                React.createElement(vortex_api_1.Icon, { name: 'add' }))),\n                        React.createElement(react_bootstrap_1.ListGroup, null, info.rules !== undefined ? info.rules.map(this.renderRule) : null))),\n                React.createElement(RuleEditor_1.default, { fileName: info.logicalFileName, show: showRuleEditor, onHide: this.hideRuleEditor, onConfirm: this.addRule })),\n            React.createElement(react_bootstrap_1.Modal.Footer, null,\n                React.createElement(vortex_api_1.tooltip.Button, { id: 'cancel-meta-btn', tooltip: t('Cancel'), onClick: this.cancel }, t('Cancel')),\n                React.createElement(vortex_api_1.tooltip.Button, { id: 'save-meta-btn', tooltip: t('Save in local DB'), onClick: this.save }, t('Save')))));\n    }\n    setField(key, value) {\n        this.setState((0, immutability_helper_1.default)(this.state, { info: {\n                [key]: { $set: value },\n            } }));\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        downloads: state.persistent.downloads.files,\n        visibleId: state.session.metaEditor.showDialog,\n        downloadPath: vortex_api_1.selectors.downloadPath(state),\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onHide: () => dispatch((0, actions_1.setShowMetaEditor)(undefined)),\n        onShowError: (title, details, options) => vortex_api_1.util.showError(dispatch, title, details, options),\n    };\n}\nexports.default = (0, react_i18next_1.withTranslation)(['common'])((0, react_redux_1.connect)(mapStateToProps, mapDispatchToProps)(MetaEditorDialog));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst immutability_helper_1 = require(\"immutability-helper\");\nconst React = require(\"react\");\nconst react_bootstrap_1 = require(\"react-bootstrap\");\nconst react_i18next_1 = require(\"react-i18next\");\nconst vortex_api_1 = require(\"vortex-api\");\nconst MD5Expression = /[a-f0-9]{32}/;\nclass RuleEditor extends vortex_api_1.ComponentEx {\n    constructor(props) {\n        super(props);\n        this.renderMetaForm = () => {\n            const { t } = this.props;\n            const { modId, logicalFileName, versionMatch } = this.state;\n            return (React.createElement(\"form\", null,\n                React.createElement(react_bootstrap_1.FormGroup, null,\n                    React.createElement(react_bootstrap_1.ControlLabel, null, t('Mod ID')),\n                    React.createElement(react_bootstrap_1.FormControl, { type: 'text', value: modId, onChange: this.setModId })),\n                React.createElement(react_bootstrap_1.FormGroup, null,\n                    React.createElement(react_bootstrap_1.ControlLabel, null, t('Logical File Name')),\n                    React.createElement(react_bootstrap_1.FormControl, { type: 'text', value: logicalFileName, onChange: this.setFileName })),\n                React.createElement(react_bootstrap_1.FormGroup, null,\n                    React.createElement(react_bootstrap_1.ControlLabel, null, t('Version Match')),\n                    React.createElement(react_bootstrap_1.FormControl, { type: 'text', value: versionMatch, onChange: this.setVersionMatch }))));\n        };\n        this.renderMD5Form = () => {\n            const { t } = this.props;\n            const { md5 } = this.state;\n            const md5state = md5 === '' ? undefined\n                : md5 === '...' ? 'pending'\n                    : md5.match(MD5Expression) ? 'success' : 'error';\n            return (React.createElement(\"form\", null,\n                React.createElement(react_bootstrap_1.FormGroup, { validationState: md5state },\n                    React.createElement(react_bootstrap_1.ControlLabel, null, t('File Hash')),\n                    React.createElement(react_bootstrap_1.FormControl, { type: 'text', value: md5, onChange: this.setMD5 }),\n                    React.createElement(vortex_api_1.FormFeedback, null))));\n        };\n        this.nop = () => undefined;\n        this.setMD5 = (evt) => {\n            this.setField('md5', evt.target.value);\n        };\n        this.setModId = (evt) => {\n            this.setField('modId', evt.target.value);\n        };\n        this.setFileName = (evt) => {\n            this.setField('logicalFileName', evt.target.value);\n        };\n        this.setVersionMatch = (evt) => {\n            this.setField('versionMatch', evt.target.value);\n        };\n        this.setRefType = (e) => {\n            this.setState((0, immutability_helper_1.default)(this.state, {\n                refType: { $set: e },\n            }));\n        };\n        this.setRuleType = (evt) => {\n            this.setState((0, immutability_helper_1.default)(this.state, {\n                ruleType: { $set: evt.target.value },\n            }));\n        };\n        this.browseForArchive = () => {\n            let filePath;\n            this.context.api.selectFile({})\n                .then((selectedFile) => {\n                filePath = selectedFile;\n                return this.context.api.lookupModMeta({ filePath })\n                    .catch(() => []);\n            })\n                .then((result) => {\n                this.setState((0, immutability_helper_1.default)(this.state, { md5: { $set: '...' } }));\n                const { genHash } = require('modmeta-db');\n                return genHash(filePath)\n                    .catch(err => undefined);\n            })\n                .then((hash) => {\n                if (hash !== undefined) {\n                    this.setState((0, immutability_helper_1.default)(this.state, {\n                        refType: { $set: 'md5' },\n                        md5: { $set: hash.md5sum },\n                    }));\n                }\n            });\n        };\n        this.hide = () => {\n            this.clear();\n            this.props.onHide();\n        };\n        this.confirm = () => {\n            const { onConfirm } = this.props;\n            const { ruleType } = this.state;\n            this.clear();\n            if (this.state.refType === 'meta') {\n                onConfirm(ruleType, {\n                    logicalFileName: this.state.logicalFileName,\n                    versionMatch: this.state.versionMatch,\n                });\n            }\n            else {\n                onConfirm(ruleType, {\n                    fileMD5: this.state.md5,\n                });\n            }\n        };\n        this.state = {\n            md5: '',\n            modId: '',\n            logicalFileName: '',\n            versionMatch: '',\n            refType: 'meta',\n            ruleType: 'requires',\n        };\n    }\n    render() {\n        const { t, fileName, show } = this.props;\n        const { refType, ruleType } = this.state;\n        return (React.createElement(react_bootstrap_1.Modal, { show: show, onHide: this.nop },\n            React.createElement(react_bootstrap_1.Modal.Header, null,\n                React.createElement(react_bootstrap_1.Modal.Title, null, fileName)),\n            React.createElement(react_bootstrap_1.Modal.Body, null,\n                React.createElement(\"form\", null,\n                    React.createElement(react_bootstrap_1.FormGroup, null,\n                        React.createElement(react_bootstrap_1.ControlLabel, null, t('Rule Type')),\n                        React.createElement(react_bootstrap_1.FormControl, { componentClass: 'select', value: ruleType, onChange: this.setRuleType },\n                            React.createElement(\"option\", { value: 'before' }, t('Always load before')),\n                            React.createElement(\"option\", { value: 'after' }, t('Always load after')),\n                            React.createElement(\"option\", { value: 'requires' }, t('Requires')),\n                            React.createElement(\"option\", { value: 'conflicts' }, t('Conflicts')),\n                            React.createElement(\"option\", { value: 'recommends' }, t('Recommends')),\n                            React.createElement(\"option\", { value: 'provides' }, t('Provides the same as'))))),\n                React.createElement(react_bootstrap_1.Nav, { bsStyle: 'pills', activeKey: refType, onSelect: this.setRefType },\n                    React.createElement(react_bootstrap_1.NavItem, { eventKey: 'meta' }, \"Meta\"),\n                    React.createElement(react_bootstrap_1.NavItem, { eventKey: 'md5' }, \"MD5\")),\n                this.state.refType === 'meta' ? this.renderMetaForm() : null,\n                this.state.refType === 'md5' ? this.renderMD5Form() : null,\n                React.createElement(react_bootstrap_1.Button, { onClick: this.browseForArchive }, t('Browse'))),\n            React.createElement(react_bootstrap_1.Modal.Footer, null,\n                React.createElement(react_bootstrap_1.Button, { onClick: this.hide }, t('Cancel')),\n                React.createElement(react_bootstrap_1.Button, { onClick: this.confirm }, t('Save')))));\n    }\n    setField(key, value) {\n        this.setState((0, immutability_helper_1.default)(this.state, {\n            [key]: { $set: value },\n        }));\n    }\n    clear() {\n        this.setState((0, immutability_helper_1.default)(this.state, {\n            md5: { $set: '' },\n            modId: { $set: '' },\n            logicalFileName: { $set: '' },\n            versionMatch: { $set: '' },\n        }));\n    }\n}\nexports.default = (0, react_i18next_1.withTranslation)(['common', 'meta-editor'])(RuleEditor);\n","module.exports = require(\"immutability-helper\");","module.exports = require(\"modmeta-db\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-i18next\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux-act\");","module.exports = require(\"semver\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"vortex-api\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}