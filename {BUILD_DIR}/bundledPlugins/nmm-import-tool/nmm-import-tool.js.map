{"version":3,"file":"index.js","mappings":"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","sources":["webpack://nmm-import-tool/./src/actions/session.ts","webpack://nmm-import-tool/./src/importedModAttributes.tsx","webpack://nmm-import-tool/./src/index.ts","webpack://nmm-import-tool/./src/reducers/session.ts","webpack://nmm-import-tool/./src/types/nmmEntries.ts","webpack://nmm-import-tool/./src/util/TraceImport.ts","webpack://nmm-import-tool/./src/util/categories.ts","webpack://nmm-import-tool/./src/util/findInstances.ts","webpack://nmm-import-tool/./src/util/import.ts","webpack://nmm-import-tool/./src/util/modFileImport.ts","webpack://nmm-import-tool/./src/util/nmmVirtualConfigParser.ts","webpack://nmm-import-tool/./src/util/util.ts","webpack://nmm-import-tool/./src/util/vortexImports.ts","webpack://nmm-import-tool/./src/views/ImportDialog.tsx","webpack://nmm-import-tool/../../node_modules/shortid/index.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/alphabet.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/build.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/decode.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/encode.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/index.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/is-valid.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/random/random-byte-browser.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/random/random-from-seed.js","webpack://nmm-import-tool/../../node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack://nmm-import-tool/external commonjs2 \"bluebird\"","webpack://nmm-import-tool/external commonjs2 \"modmeta-db\"","webpack://nmm-import-tool/external commonjs2 \"path\"","webpack://nmm-import-tool/external commonjs2 \"react\"","webpack://nmm-import-tool/external commonjs2 \"react-bootstrap\"","webpack://nmm-import-tool/external commonjs2 \"react-i18next\"","webpack://nmm-import-tool/external commonjs2 \"react-redux\"","webpack://nmm-import-tool/external commonjs2 \"redux-act\"","webpack://nmm-import-tool/external commonjs2 \"util\"","webpack://nmm-import-tool/external commonjs2 \"vortex-api\"","webpack://nmm-import-tool/external commonjs2 \"winapi-bindings\"","webpack://nmm-import-tool/external node-commonjs \"crypto\"","webpack://nmm-import-tool/external node-commonjs \"os\"","webpack://nmm-import-tool/external node-commonjs \"url\"","webpack://nmm-import-tool/webpack/bootstrap","webpack://nmm-import-tool/webpack/before-startup","webpack://nmm-import-tool/webpack/startup","webpack://nmm-import-tool/webpack/after-startup"],"sourcesContent":["import { createAction } from 'redux-act';\r\n\r\nexport const setImportStep = createAction<any, {}>('SET_NMM_IMPORT_STEP');\r\n\r\nexport const setMods = createAction('SET_MODS');\r\n\r\nexport const selectImportFolder = createAction('SELECT_IMPORT_FOLDER');\r\n","import { IModEntry } from './types/nmmEntries';\r\n\r\nimport * as I18next from 'i18next';\r\nimport * as React from 'react';\r\nimport { TableTextFilter, tooltip, types } from 'vortex-api';\r\n\r\nexport const MOD_ID: types.ITableAttribute = {\r\n  id: 'id',\r\n  name: 'Mod Id',\r\n  description: 'Nexus id of the mod',\r\n  icon: 'id-badge',\r\n  calc: (mod: IModEntry) => mod.nexusId,\r\n  placement: 'both',\r\n  isToggleable: true,\r\n  isSortable: true,\r\n  isDefaultVisible: false,\r\n  edit: {},\r\n};\r\n\r\nexport const MOD_NAME: types.ITableAttribute = {\r\n  id: 'name',\r\n  name: 'Mod Name',\r\n  description: 'The Name of the mod',\r\n  icon: 'quote-left',\r\n  calc: (mod: IModEntry) => mod.modName,\r\n  placement: 'both',\r\n  isToggleable: true,\r\n  isSortable: true,\r\n  filter: new TableTextFilter(true),\r\n  edit: {},\r\n  sortFunc: (lhs: string, rhs: string, locale: string): number => {\r\n    return lhs.localeCompare(rhs, locale, { sensitivity: 'base' });\r\n  },\r\n};\r\n\r\nexport const MOD_VERSION: types.ITableAttribute = {\r\n  id: 'version',\r\n  name: 'Mod Version',\r\n  description: 'The mod version',\r\n  icon: 'map-marker',\r\n  calc: (mod: IModEntry) => mod.modVersion,\r\n  placement: 'both',\r\n  isToggleable: true,\r\n  isSortable: true,\r\n  filter: new TableTextFilter(false),\r\n  sortFunc: (lhs: string, rhs: string, locale: string): number => {\r\n    return lhs.localeCompare(rhs, locale, { sensitivity: 'base' });\r\n  },\r\n  edit: {},\r\n};\r\n\r\nexport const FILENAME: types.ITableAttribute = {\r\n  id: 'filename',\r\n  name: 'Mod Archive',\r\n  description: 'The filename of the mod archive',\r\n  icon: 'file-picture-o',\r\n  calc: (mod: IModEntry) => mod.modFilename,\r\n  placement: 'both',\r\n  isToggleable: true,\r\n  isSortable: true,\r\n  isDefaultVisible: false,\r\n  filter: new TableTextFilter(true),\r\n  edit: {},\r\n};\r\n\r\nexport const LOCAL: types.ITableAttribute<IModEntry> = {\r\n  id: 'local',\r\n  name: 'Duplicate',\r\n  description: 'Whether the mod/archive is already managed by Vortex',\r\n  icon: 'level-up',\r\n  customRenderer: (mod: IModEntry, detail: boolean, t: I18next.TFunction) => {\r\n    return mod.isAlreadyManaged ? (\r\n      <tooltip.Icon\r\n        id={`import-duplicate-${mod.nexusId}`}\r\n        tooltip={t('This archive is already managed by Vortex')}\r\n        name='feedback-warning'\r\n      />\r\n   ) : null;\r\n  },\r\n  calc: mod => mod.isAlreadyManaged,\r\n  placement: 'table',\r\n  isToggleable: true,\r\n  isSortable: true,\r\n  filter: new TableTextFilter(true),\r\n  edit: {},\r\n};\r\n","import { setImportStep } from './actions/session';\r\nimport { sessionReducer } from './reducers/session';\r\nimport ImportDialog from './views/ImportDialog';\r\n\r\nimport * as path from 'path';\r\nimport { fs, selectors, types, util } from 'vortex-api';\r\n\r\nlet appPath: string;\r\n\r\nfunction nmmConfigExists(): boolean {\r\n  try {\r\n    if (appPath === undefined) {\r\n      appPath = util.getVortexPath('appData');\r\n    }\r\n    const base = path.resolve(appPath, '..', 'local', 'Black_Tree_Gaming');\r\n    fs.statSync(base);\r\n    return true;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n}\r\n\r\nconst isGameSupported = (context: types.IExtensionContext): boolean => {\r\n  const state = context.api.store.getState();\r\n  const gameId: string = selectors.activeGameId(state);\r\n  return ([\r\n    'skyrim', 'skyrimse',  'skyrimvr',\r\n    'morrowind', 'oblivion', 'fallout3',\r\n    'falloutnv', 'fallout4', 'fallout4vr',\r\n    'enderal', 'monsterhunterworld', 'witcher2',\r\n    'witcher3', 'xrebirth', 'xcom2',\r\n    'worldoftanks', 'warthunder', 'teso',\r\n    'stateofdecay', 'starbound', 'legendsofgrimrock',\r\n    'dragonsdogma', 'dragonage', 'dragonage2',\r\n    'darksouls', 'darksouls2', 'breakingwheel',\r\n    'nomanssky',\r\n  ].indexOf(gameId) !== -1);\r\n};\r\n\r\nfunction init(context: types.IExtensionContext): boolean {\r\n  if (process.platform !== 'win32') {\r\n    // not going to work on other platforms because some of the path resolution\r\n    // assumes windows.\r\n    return false;\r\n  }\r\n\r\n  context.registerReducer(['session', 'modimport'], sessionReducer);\r\n\r\n  const gameModeActive = (store) => selectors.activeGameId(store.getState()) !== undefined \r\n    ? true\r\n    : false;\r\n\r\n  context.registerDialog('nmm-import', ImportDialog, () => ({\r\n  }));\r\n\r\n  context.registerAction('mod-icons', 115, 'import', {}, 'Import From NMM', () => {\r\n    context.api.store.dispatch(setImportStep('start'));\r\n  }, () => isGameSupported(context));\r\n\r\n  context.registerToDo('import-nmm', 'search', () => ({}), 'import', 'Import from NMM', () => {\r\n    context.api.store.dispatch(setImportStep('start'));\r\n    context.api.events.emit('analytics-track-click-event', 'Dashboard', 'NMM Import');\r\n  }, () => nmmConfigExists() && gameModeActive(context.api.store),  '', 100);\r\n\r\n  context.once(() => {\r\n    context.api.setStylesheet('nmm-import-tool', path.join(__dirname, 'import-tool.scss'));\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nexport default init;\r\n","import { types, util } from 'vortex-api';\r\n\r\nimport * as actions from '../actions/session';\r\n\r\n/**\r\n * reducer for changes to ephemeral session state\r\n */\r\nexport const sessionReducer: types.IReducerSpec = {\r\n  reducers: {\r\n    [actions.setImportStep as any]: (state, payload) =>\r\n      util.setSafe(state, ['importStep'], payload),\r\n    [actions.selectImportFolder as any]: (state, payload) => {\r\n      const importFolder = payload;\r\n      return util.setSafe(state, ['selectFolder'], importFolder);\r\n    },\r\n  },\r\n  defaults: {\r\n    importStep: undefined,\r\n    importedMods: {},\r\n    selectFolder: false,\r\n    selectedProfile: undefined,\r\n  },\r\n};\r\n","import * as util from 'util';\r\n\r\nexport interface IModEntry {\r\n  nexusId: string;\r\n  vortexId: string;\r\n  downloadId: number;\r\n  modName: string;\r\n  modFilename: string;\r\n  archivePath: string;\r\n  modVersion: string;\r\n  archiveMD5: string;\r\n  importFlag: boolean;\r\n  isAlreadyManaged: boolean;\r\n  archiveId?: string;\r\n  categoryId?: string;\r\n  customName?: string;\r\n}\r\n\r\nexport interface IFileEntry {\r\n  fileSource: string;\r\n  fileDestination: string;\r\n  isActive: boolean;\r\n  filePriority: number;\r\n}\r\n\r\nexport type ModsMap = { [modId: string]: IModEntry };\r\nexport type ProgressCB = (err: Error, mod: string) => void;\r\n\r\nexport function ParseError(message) {\r\n  this.message = message;\r\n  Error.captureStackTrace(this, ParseError);\r\n}\r\n\r\nutil.inherits(ParseError, Error);\r\n\r\nParseError.prototype.name = 'ParseError';\r\n","import Promise from 'bluebird';\r\nimport * as os from 'os';\r\nimport * as path from 'path';\r\nimport { inspect } from 'util';\r\nimport { fs, util } from 'vortex-api';\r\n\r\nclass TraceImport {\r\n  private mPath: string;\r\n  private mLogFile: fs.WriteStream;\r\n\r\n  constructor() {\r\n    const now = new Date();\r\n    const name = `nmm_import-${now.getTime()}`;\r\n    this.mPath = path.join(util.getVortexPath('userData'), name);\r\n  }\r\n\r\n  public get logFilePath(): string {\r\n    return path.join(this.mPath, 'migration.log');\r\n  }\r\n\r\n  public initDirectory(importPath: string): Promise<void> {\r\n    return fs.ensureDirAsync(this.mPath)\r\n      .then(() => fs.createWriteStream(this.logFilePath))\r\n      .then(stream => {\r\n        this.mLogFile = stream;\r\n        return fs.copyAsync(\r\n          path.join(importPath, 'VirtualInstall', 'VirtualModConfig.xml'),\r\n          path.join(this.mPath, 'VirtualModConfig.xml'));\r\n      })\r\n      .catch(err => (err.code === 'ENOENT')\r\n        // No virtual mod config.. We know this tends to happen on some\r\n        //  configurations - resolve and keep going.\r\n        //  (oh the hacks we need to put in to support that PoS manager)\r\n        ? Promise.resolve()\r\n        : Promise.reject(err));\r\n  }\r\n\r\n  public finish() {\r\n    this.mLogFile.end();\r\n    this.mLogFile = undefined;\r\n  }\r\n\r\n  public log(level: 'info' | 'warn' | 'error', message: string, extra?: any): void {\r\n    let fullMessage = message;\r\n    if (extra !== undefined) {\r\n      fullMessage += ' (' + inspect(extra, { depth: null }).replace('\\n', os.EOL) + ')';\r\n    }\r\n    this.mLogFile.write(fullMessage + os.EOL);\r\n  }\r\n\r\n  public writeFile(name: string, content: string): Promise<void> {\r\n    return fs.writeFileAsync(path.join(this.mPath, name), content);\r\n  }\r\n}\r\n\r\nexport default TraceImport;\r\n","import Promise from 'bluebird';\nimport { fs } from 'vortex-api';\n\nfunction parseCategories(data: string): { [id: string]: string } {\n  const parser = new DOMParser();\n\n  const xmlDoc = parser.parseFromString(data, 'text/xml');\n\n  const categories = xmlDoc.querySelectorAll('categoryManager categoryList category');\n  const items = [...Array(categories.length).keys()].map(i => categories.item(i));\n\n  return items.reduce((prev: { [id: string]: string }, item) => {\n    const categoryName = item.getElementsByTagName('name')[0].textContent;\n    if (categoryName !== 'Unassigned') {\n      // Ignore the \"Unassigned\" category.\n      prev[item.getAttribute('ID')] = categoryName;\n    }\n\n    return prev;\n  }, {});\n}\n\nexport function getCategories(categoriesPath: string): Promise<{ [id: string]: string }> {\n  return fs.readFileAsync(categoriesPath)\n    .then(data => {\n      if (data.compare(Buffer.from([0xEF, 0xBB, 0xBF]), 0, 3, 0, 3) === 0) {\n        data = data.slice(3);\n      }\n      return parseCategories(data.toString('utf-8'));\n    });\n}\n","import Promise from 'bluebird';\r\nimport * as path from 'path';\r\nimport { fs, util } from 'vortex-api';\r\n\r\nfunction convertGameId(input: string): string {\r\n  if (input === 'skyrimse') {\r\n    return 'SkyrimSE';\r\n  } else if (input === 'falloutnv') {\r\n    return 'FalloutNV';\r\n  }\r\n  return input.replace(/(?:^|\\s)\\S/g, (a) => a.toUpperCase());\r\n}\r\n\r\nfunction getVirtualFolder(userConfig: string, gameId: string): Promise<string[]> {\r\n  const parser = new DOMParser();\r\n\r\n  const xmlDoc = parser.parseFromString(userConfig, 'text/xml');\r\n\r\n  let item = xmlDoc\r\n    .querySelector(`setting[name=\"VirtualFolder\"] item[modeId=\"${convertGameId(gameId)}\" i] string`);\r\n\r\n  if (item === null) {\r\n    return Promise.resolve(undefined);\r\n  }\r\n\r\n  const virtualPath = item.textContent;\r\n  let nmmLinkPath = '';\r\n\r\n  item = xmlDoc\r\n  .querySelector(`setting[name=\"HDLinkFolder\"] item[modeId=\"${convertGameId(gameId)}\" i] string`);\r\n\r\n  if (item !== null) {\r\n    nmmLinkPath = item.textContent;\r\n  }\r\n\r\n  item = xmlDoc\r\n  .querySelector(`setting[name=\"ModFolder\"] item[modeId=\"${convertGameId(gameId)}\" i] string`);\r\n\r\n  if (item === null) {\r\n    return Promise.resolve(undefined);\r\n  }\r\n\r\n  const modsPath = item.textContent;\r\n\r\n  const setting = [ virtualPath, nmmLinkPath, modsPath, '0' ];\r\n  return fs.statAsync(modsPath)\r\n    .then(stats => Promise.resolve([\r\n      virtualPath,\r\n      nmmLinkPath,\r\n      modsPath,\r\n      stats.birthtimeMs.toString()]))\r\n    .catch(err => Promise.resolve(setting));\r\n}\r\n\r\nfunction findInstances(gameId: string): Promise<string[][]> {\r\n  const base = path.resolve(util.getVortexPath('appData'), '..', 'local', 'Black_Tree_Gaming');\r\n  return fs.readdirAsync(base)\r\n    .filter((fileName: string) => fs.statAsync(path.join(base, fileName))\r\n                                      .then(stat => stat.isDirectory()))\r\n    .then((instances: string[]) =>\r\n      Promise.map(instances, instance => fs.readdirAsync(path.join(base, instance))\r\n        .then((versions: string[]) =>\r\n          Promise.map(versions, version =>\r\n            fs.readFileAsync(path.join(base, instance, version, 'user.config'))\r\n              .then((data: Buffer) =>\r\n                getVirtualFolder(data.toString(), gameId))))))\r\n    .then(result => {\r\n      // remove duplicates, in a case-insensitive way, remove undefined\r\n      const set = result.reduce((prev: { [key: string]: string[] }, value: string[][]) => {\r\n        value.forEach(val => {\r\n          if (val !== undefined) {\r\n            if (prev[val[0].toUpperCase()] !== undefined) {\r\n              // We found a duplicate entry.. Now we're faced with a problem:\r\n              //  which of these instances is the currently active one ?\r\n              //  - if they're both pointing to the same mods folder, then we're fine.\r\n              //  - if they have different mods folder, we check its creation time -\r\n              //  most recent mods folder MUST be the active one... right?\r\n              const existingVal = prev[val[0].toUpperCase()];\r\n              if ((existingVal[2] !== val[2])\r\n                && (parseInt(existingVal[3], 10) < parseInt(val[3], 10))) {\r\n                prev[val[0].toUpperCase()] = val;\r\n              }\r\n            } else {\r\n              // Easy - no duplicates.\r\n              prev[val[0].toUpperCase()] = val;\r\n            }\r\n          }\r\n        });\r\n        return prev;\r\n      }, {});\r\n      return Object.keys(set).map(key => set[key]);\r\n    })\r\n    .catch(err => (err.code === 'ENOENT') ? Promise.resolve([]) : Promise.reject(err));\r\n}\r\n\r\nexport default findInstances;\r\n","import { transferArchive } from './modFileImport';\r\n\r\nimport {IModEntry} from '../types/nmmEntries';\r\nimport TraceImport from './TraceImport';\r\nimport { addMetaData} from './vortexImports';\r\n\r\nimport Promise from 'bluebird';\r\nimport * as path from 'path';\r\nimport { generate as shortid } from 'shortid';\r\nimport { actions, fs, selectors, types, util } from 'vortex-api';\r\n\r\nfunction getInner(ele: Element): string {\r\n  if ((ele !== undefined) && (ele !== null)) {\r\n    const node = ele.childNodes[0];\r\n    if (node !== undefined) {\r\n      return node.nodeValue;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction enhance(sourcePath: string, input: IModEntry,\r\n                 nmmCategories: { [id: string]: string },\r\n                 vortexCategory: (name: string) => string): Promise<IModEntry> {\r\n  // this id is currently identically to what we store as the vortexId but I don't want\r\n  // to rely on that always being the case\r\n  const id = path.basename(input.modFilename, path.extname(input.modFilename));\r\n  const cacheBasePath = path.resolve(sourcePath, 'cache', id);\r\n  return fs.readFileAsync(path.join(cacheBasePath, 'cacheInfo.txt'))\r\n    .then(data => {\r\n      const fields = data.toString().split('@@');\r\n      return fs.readFileAsync(path.join(cacheBasePath,\r\n        (fields[1] === '-') ? '' : fields[1], 'fomod', 'info.xml'));\r\n    })\r\n    .then(infoXmlData => {\r\n      const parser = new DOMParser();\r\n      const xmlDoc = parser.parseFromString(infoXmlData.toString(), 'text/xml');\r\n\r\n      const customName = getInner(xmlDoc.querySelector('fomod Name'));\r\n\r\n      let categoryId = getInner(xmlDoc.querySelector('fomod CustomCategoryId'))\r\n                      || getInner(xmlDoc.querySelector('fomod CategoryId'));\r\n      const category = categoryId !== undefined ? nmmCategories[categoryId] : undefined;\r\n\r\n      categoryId = (category !== undefined)\r\n        ? vortexCategory(category)\r\n        : undefined;\r\n\r\n      return {\r\n        ...input,\r\n        archiveId: shortid(),\r\n        categoryId,\r\n        customName,\r\n      };\r\n    })\r\n    .catch(err => ({\r\n      ...input,\r\n      archiveId: shortid(),\r\n    }));\r\n}\r\n\r\nfunction importArchives(api: types.IExtensionApi,\r\n                        gameId: string,\r\n                        trace: TraceImport,\r\n                        modsPath: string,\r\n                        mods: IModEntry[],\r\n                        categories: { [id: string]: string },\r\n                        progress: (mod: string, idx: number) => void): Promise<string[]> {\r\n  const store = api.store;\r\n  const state: types.IState = store.getState();\r\n  const vortexCategories = state.persistent.categories[gameId];\r\n\r\n  const makeVortexCategory = (name: string): string => {\r\n    const existing = Object.keys(vortexCategories).find(key => vortexCategories[key].name === name);\r\n    if (existing !== undefined) {\r\n      return existing;\r\n    }\r\n\r\n    if (vortexCategories['nmm_0'] === undefined) {\r\n      trace.log('info', 'Adding root for imported NMM categories');\r\n      store.dispatch(actions.setCategory(gameId, 'nmm_0',\r\n        { name: 'Imported from NMM', order: 0, parentCategory: undefined }));\r\n    }\r\n\r\n    let id = 1;\r\n    while (vortexCategories[`nmm_${id}`] !== undefined) {\r\n      ++id;\r\n    }\r\n\r\n    trace.log('info', 'NMM category couldn\\'t be matched, importing', name);\r\n    store.dispatch(actions.setCategory(gameId, `nmm_${id}`,\r\n      { name, order: 0, parentCategory: 'nmm_0' }));\r\n    return `nmm_${id}`;\r\n  };\r\n\r\n  const errors: string[] = [];\r\n\r\n  const transferArchiveFile = (source: string,\r\n                               dest: string,\r\n                               mod: IModEntry,\r\n                               size: number): Promise<void> => {\r\n    return transferArchive(source, dest).then(() => {\r\n      const downloads = util.getSafe(state, ['persistent', 'downloads', 'files'], undefined);\r\n      if (downloads === undefined) {\r\n        // The user hasn't downloaded anything yet.\r\n        return Promise.resolve();\r\n      }\r\n\r\n      // Ensure we don't have any duplicate archive ids pointing\r\n      //  to the same localPath - if we do, remove them.\r\n      const archiveIds = Object.keys(downloads);\r\n      const filtered = archiveIds.filter(id => downloads[id].localPath === mod.modFilename);\r\n      filtered.forEach(id => {\r\n        mod.archiveId = id;\r\n        store.dispatch(actions.removeDownload(id));\r\n      });\r\n      return Promise.resolve();\r\n    })\r\n    .then(() => {\r\n      store.dispatch(actions.addLocalDownload(\r\n        mod.archiveId, gameId, mod.modFilename, size));\r\n      return Promise.resolve();\r\n    });\r\n  };\r\n\r\n  return trace.writeFile('parsedMods.json', JSON.stringify(mods))\r\n    .then(() => {\r\n      const importedArchives: IModEntry[] = [];\r\n      trace.log('info', 'transfer archive files');\r\n      const downloadPath = selectors.downloadPath(state);\r\n      return Promise.map(mods, mod => enhance(modsPath, mod, categories, makeVortexCategory))\r\n        .then(modsEx => Promise.mapSeries(modsEx, (mod, idx) => {\r\n          trace.log('info', 'transferring', JSON.stringify(mod.modFilename, undefined, 2));\r\n          progress(mod.modName, idx);\r\n          const archivePath = path.join(mod.archivePath, mod.modFilename);\r\n          return fs.statAsync(archivePath)\r\n            .then(stats => transferArchiveFile(archivePath, downloadPath, mod, stats.size))\r\n            .tap(() => importedArchives.push(mod))\r\n            .catch(err => {\r\n                trace.log('error', 'Failed to import mod archive',\r\n                          archivePath + ' - ' + err.message);\r\n                errors.push(mod.modFilename);\r\n            });\r\n        })\r\n        .then(() => {\r\n          trace.log('info', 'Finished transferring mod archives');\r\n          if (importedArchives.length > 0) {\r\n            addMetaData(gameId, importedArchives, api);\r\n            api.events.emit('did-import-downloads', importedArchives.map(arch => arch.archiveId));\r\n          }\r\n        }));\r\n    })\r\n    .then(() => {\r\n      trace.finish();\r\n      return errors;\r\n    });\r\n}\r\n\r\nexport default importArchives;\r\n","import Promise from 'bluebird';\r\nimport * as path from 'path';\r\nimport { fs, util } from 'vortex-api';\r\n\r\n/**\r\n * copy or move a list of mod archives\r\n * @param {string} modArchive\r\n * @param {string} destSavePath\r\n */\r\nexport function transferArchive(modArchivePath: string,\r\n                                destSavePath: string): Promise<void> {\r\n  return fs.copyAsync(modArchivePath, path.join(destSavePath, path.basename(modArchivePath)));\r\n}\r\n\r\nfunction byLength(lhs: string, rhs: string): number {\r\n  return lhs.length - rhs.length;\r\n}\r\n","import { IFileEntry, IModEntry, ParseError } from '../types/nmmEntries';\r\n\r\nimport Promise from 'bluebird';\r\nimport * as modmeta from 'modmeta-db';\r\nimport * as path from 'path';\r\nimport { fs, log, types, util } from 'vortex-api';\r\n\r\ninterface IModMap {\r\n  [modId: string]: types.IMod;\r\n}\r\n\r\nfunction getModInfoList(xmlData: string): Promise<HTMLCollectionOf<Element>> {\r\n  return new Promise((resolve, reject) => {\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\r\n    const version = xmlDoc.getElementsByTagName('virtualModActivator')[0];\r\n\r\n    // sanity checks for the file structure\r\n    if ((version === null) || (version === undefined)) {\r\n      return reject(new ParseError(\r\n          'The selected folder does not contain a valid VirtualModConfig.xml file.'));\r\n    }\r\n\r\n    if (version.getAttribute('fileVersion') !== '0.3.0.0') {\r\n      return reject(new ParseError(\r\n          'The selected folder contains an older VirtualModConfig.xml file,' +\r\n          'you need to upgrade your NMM before proceeding with the mod import.'));\r\n    }\r\n\r\n    return resolve(xmlDoc.getElementsByTagName('modInfo'));\r\n  });\r\n}\r\n\r\nexport function isConfigEmpty(configFilePath: string): Promise<boolean> {\r\n  return fs.readFileAsync(configFilePath)\r\n    .then(data => getModInfoList(data.toString('utf-8')))\r\n    .then(modInfoList => {\r\n      return ((modInfoList === undefined) || (modInfoList.length === 0))\r\n        ? Promise.resolve(true)\r\n        : Promise.resolve(false);\r\n    })\r\n    .catch(err => Promise.resolve(true));\r\n}\r\n\r\nexport function parseNMMConfigFile(nmmFilePath: string, mods: IModMap): Promise<IModEntry[]> {\r\n  return fs.readFileAsync(nmmFilePath)\r\n    .then(data => parseModEntries(data.toString('utf-8'), mods)\r\n      .then(modEntries => modEntries.filter(entry => entry !== undefined)))\r\n    .catch(err => Promise.reject(new ParseError(\r\n      'The selected folder does not contain a VirtualModConfig.xml file.')));\r\n}\r\n\r\n// exported so it can be unit-tested (ugh)\r\nexport function parseModEntries(xmlData: string, mods: IModMap): Promise<IModEntry[]> {\r\n  // lookup to determine if a mod is already installed in vortex\r\n  const modListSet = new Set(Object.keys(mods || {}).map((key: string) => mods[key].id));\r\n\r\n  return getModInfoList(xmlData)\r\n    .then(modInfoList => {\r\n      if ((modInfoList === undefined) || (modInfoList.length <= 0)) {\r\n        return Promise.reject(new ParseError(\r\n          'The selected folder contains an empty VirtualModConfig.xml file.'));\r\n      }\r\n\r\n      return Promise.map(Array.from(modInfoList), (modInfo: Element): Promise<IModEntry> => {\r\n        const res: IModEntry = {\r\n          nexusId: modInfo.getAttribute('modId'),\r\n          vortexId: undefined,\r\n          downloadId: parseInt(modInfo.getAttribute('downloadId'), 10) || undefined,\r\n          modName: modInfo.getAttribute('modName'),\r\n          modFilename: modInfo.getAttribute('modFileName'),\r\n          archivePath: modInfo.getAttribute('modFilePath'),\r\n          modVersion: modInfo.getAttribute('FileVersion'),\r\n          importFlag: true,\r\n          archiveMD5: null,\r\n          isAlreadyManaged: false,\r\n        };\r\n\r\n        const archiveName =\r\n            path.basename(res.modFilename, path.extname(res.modFilename));\r\n        res.vortexId = util.deriveInstallName(archiveName, {});\r\n        res.isAlreadyManaged = modListSet.has(res.vortexId);\r\n\r\n        const modArchiveFilePath = path.join(res.archivePath, res.modFilename);\r\n        return fs.statAsync(modArchiveFilePath)\r\n          .then(() => modmeta.genHash(modArchiveFilePath))\r\n          .then((hashResult: modmeta.IHashResult) => {\r\n            res.archiveMD5 = hashResult.md5sum;\r\n            return Promise.resolve(res);\r\n          })\r\n          .catch(() => Promise.resolve(undefined));\r\n      });\r\n    });\r\n}\r\n\r\nexport default parseNMMConfigFile;\r\n","import { createHash } from 'crypto';\nimport path from 'path';\nimport { TFunction } from 'react-i18next';\nimport { pathToFileURL } from 'url';\nimport { fs, log, types, util } from 'vortex-api';\nimport * as winapi from 'winapi-bindings';\n\nimport { isConfigEmpty } from './nmmVirtualConfigParser';\nimport { ModsCapacityMap, ICapacityInfo } from '../types/capacityTypes';\nimport { IModEntry, ModsMap, ProgressCB } from '../types/nmmEntries';\n\n// Doesn't seem to be used any longer, but going to keep it here just in case we need it one day.\nconst _LINKS = {\n  // tslint:disable-next-line: max-line-length\n    TO_CONSIDER: 'https://wiki.nexusmods.com/index.php/Importing_from_Nexus_Mod_Manager:_Things_to_consider',\n  // tslint:disable-next-line: max-line-length\n    UNMANAGED: 'https://wiki.nexusmods.com/index.php/Importing_from_Nexus_Mod_Manager:_Things_to_consider#Unmanaged_Files',\n  // tslint:disable-next-line: max-line-length\n    FILE_CONFLICTS: 'https://wiki.nexusmods.com/index.php/File_Conflicts:_Nexus_Mod_Manager_vs_Vortex',\n    MANAGE_CONFLICTS: 'https://wiki.nexusmods.com/index.php/Managing_File_Conflicts',\n    DOCUMENTATION: 'https://wiki.nexusmods.com/index.php/Category:Vortex',\n};\n  \n\n// Used to reduce the amount of detected free space by 500MB.\n//  This is done to avoid situations where the user may be left\n//  with no disk space after the import process is finished.\nconst MIN_DISK_SPACE_OFFSET = (500 * (1e+6));\n\n// Set of known/acceptable archive extensions.\nconst archiveExtLookup = new Set<string>([\n  '.zip', '.7z', '.rar', '.bz2', '.bzip2', '.gz', '.gzip', '.xz', '.z',\n]);\n\nexport function getCategoriesFilePath(modsPath: string) {\n  return path.join(modsPath, 'categories', 'Categories.xml');\n}\n\nexport function getVirtualConfigFilePath(source: string) {\n  return path.join(source, 'VirtualInstall', 'VirtualModConfig.xml');\n}\n\nexport async function calculateArchiveSize(mod: IModEntry): Promise<number> {\n  try {\n    const stats = await fs.statAsync(path.join(mod.archivePath, mod.modFilename));\n    return Promise.resolve(stats.size);\n  } catch (err) {\n    return (err instanceof util.UserCanceled)\n      ? Promise.resolve(0)\n      : Promise.reject(err);\n  }\n}\n\nexport function getCapacityInformation(dirPath: string): ICapacityInfo {\n  const rootPath = winapi.GetVolumePathName(dirPath);\n  // It is beyond the scope of the disk space calculation logic to check or ensure\n  //  that the installation/download paths exist (this should've been handled before this\n  //  stage);\n  //  reason why we're simply going to use the root paths for the calculation.\n  //\n  //  This is arguably a band-aid fix for https://github.com/Nexus-Mods/Vortex/issues/2624;\n  //  but the only reason why these folders would be missing in the first place is if they\n  //  have been removed manually or by an external application WHILE Vortex is running!\n  //\n  //  The import process will create these directories when mod/archive files are copied over\n  //  if they're missing.\n  const totalFreeBytes = winapi.GetDiskFreeSpaceEx(rootPath).free - MIN_DISK_SPACE_OFFSET;\n  return {\n    rootPath,\n    totalFreeBytes,\n  }\n}\n\nexport async function testAccess(t: TFunction, source: string): Promise<void> {\n  // Technically we only need read access, we're going to\n  //  run the MD5 hash generation logic on a random archive\n  //  as that requires Vortex to open the file and that's as\n  //  invasive as the import tool can get.\n  //\n  // If this fails, there's no point to continue the import\n  //  process as it would just fail later down the line.\n  if (source === undefined) {\n    // How did we even get here ?\n    return Promise.resolve();\n  }\n\n  const dirElements: string[] = await fs.readdirAsync(source)\n    .filter(el => archiveExtLookup.has(path.extname(el)));\n  if (dirElements.length === 0) {\n    return Promise.resolve();\n  }\n\n  const filePath = path.join(path.join(source, dirElements[0]));\n  try {\n    await fileChecksum(filePath);\n  } catch (err) {\n    log('error', 'Failed to generate MD5 hash', err);\n    return (err.code !== 'EPERM')\n      ? Promise.reject(err)\n      : Promise.reject(new Error(t('Vortex is unable to read/open one or more of '\n        + 'your archives - please ensure you have full permissions to those files, and '\n        + 'that NMM is not running in the background before trying again. '\n        + 'Additionally, now would be a good time to add an exception for Vortex to '\n        + 'your Anti-Virus software (if you have one)', { ns: 'common' })));\n  }\n}\n\nexport async function fileChecksum(filePath: string): Promise<string> {\n  const stackErr = new Error();\n  return new Promise<string>((resolve, reject) => {\n    try {\n      const hash = createHash('md5');\n      const stream = fs.createReadStream(filePath);\n      stream.on('data', (data) => {\n        hash.update(data);\n      });\n      stream.on('end', () => {\n        stream.close();\n        stream.destroy();\n        return resolve(hash.digest('hex'));\n      });\n      stream.on('error', (err) => {\n        err.stack = stackErr.stack;\n        reject(err);\n      });\n    } catch (err) {\n      err.stack = stackErr.stack;\n      reject(err);\n    }\n  });\n}\n\nexport async function getArchives(source: string, parsedMods: { [id: string]: IModEntry }): Promise<string[]> {\n  const knownArchiveExt = (filePath: string): boolean => (!!filePath)\n    ? archiveExtLookup.has(path.extname(filePath).toLowerCase())\n    : false;\n\n  // Set of mod files which we already have meta information on.\n  const modFileNames = new Set<string>(Object.keys(parsedMods)\n    .map(key => parsedMods[key].modFilename));\n\n  return fs.readdirAsync(source)\n    .filter((filePath: string) => knownArchiveExt(filePath))\n    .then((archives: string[]) => archives.filter(archive => !modFileNames.has(archive)))\n    .catch((err: Error) => {\n      this.nextState.error = err.message;\n      return Promise.resolve([]);\n    });\n}\n\nexport function createModEntry(sourcePath: string,\n  input: string,\n  existingDownloads: Set<string>): Promise<IModEntry> {\n  // Attempt to query cache/meta information from NMM and return a mod entry\n  //  to use in the import process.\n  const getInner = (ele: Element): string => {\n    if ((ele !== undefined) && (ele !== null)) {\n      const node = ele.childNodes[0];\n      if (node !== undefined) {\n        return node.nodeValue;\n      }\n    }\n    return undefined;\n  };\n\n  const isDuplicate = () => {\n    return (existingDownloads !== undefined)\n      ? existingDownloads.has(input)\n      : false;\n  };\n\n  const id = path.basename(input, path.extname(input));\n  const cacheBasePath = path.resolve(sourcePath, 'cache', id);\n  return fileChecksum(path.join(sourcePath, input))\n    .then(md5 => fs.readFileAsync(path.join(cacheBasePath, 'cacheInfo.txt'))\n      .then(data => {\n        const fields = data.toString().split('@@');\n        return fs.readFileAsync(path.join(cacheBasePath,\n          (fields[1] === '-') ? '' : fields[1], 'fomod', 'info.xml'));\n      })\n      .then(infoXmlData => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(infoXmlData.toString(), 'text/xml');\n        const modName = getInner(xmlDoc.querySelector('Name')) || id;\n        const version = getInner(xmlDoc.querySelector('Version')) || '';\n        const modId = getInner(xmlDoc.querySelector('Id')) || '';\n        const downloadId = () => {\n          try {\n            return Number.parseInt(getInner(xmlDoc.querySelector('DownloadId')), 10);\n          } catch (err) {\n            return 0;\n          }\n        };\n\n        return Promise.resolve({\n          nexusId: modId,\n          vortexId: '',\n          downloadId: downloadId(),\n          modName,\n          modFilename: input,\n          archivePath: sourcePath,\n          modVersion: version,\n          archiveMD5: md5,\n          importFlag: true,\n          isAlreadyManaged: isDuplicate(),\n        });\n      })\n      .catch(err => {\n        log('error', 'could not parse the mod\\'s cache information', err);\n        return Promise.resolve({\n          nexusId: '',\n          vortexId: '',\n          downloadId: 0,\n          modName: path.basename(input, path.extname(input)),\n          modFilename: input,\n          archivePath: sourcePath,\n          modVersion: '',\n          archiveMD5: md5,\n          importFlag: true,\n          isAlreadyManaged: isDuplicate(),\n        });\n      }));\n}\n\nexport function isNMMRunning(): boolean {\n  const processes = winapi.GetProcessList();\n  const runningExes: { [exeId: string]: winapi.ProcessEntry } =\n    processes.reduce((prev, entry) => {\n      prev[entry.exeFile.toLowerCase()] = entry;\n      return prev;\n    }, {});\n\n  return Object.keys(runningExes).find(key => key === 'nexusclient.exe') !== undefined;\n}\n\nexport async function validate(source: string) {\n  const res = await isConfigEmpty(path.join(source, 'VirtualInstall', 'VirtualModConfig.xml'));\n  const nmmRunning = isNMMRunning();\n  return Promise.resolve({\n    nmmModsEnabled: !res,\n    nmmRunning,\n  });\n}\n\nexport async function calculateModsCapacity(modList: IModEntry[], cb: (err: Error, mod: string) => void): Promise<ModsCapacityMap> {\n  const modCapacityInfo: ModsCapacityMap = {};\n  for (const mod of modList) {\n    cb(null, mod.modFilename);\n    try {\n      const archiveSizeBytes = await calculateArchiveSize(mod);\n      modCapacityInfo[mod.modFilename] = archiveSizeBytes;\n    } catch (err) {\n      cb(err, mod.modFilename);\n      modCapacityInfo[mod.modFilename] = 0;\n    }\n  }\n  return Promise.resolve(modCapacityInfo);\n}\n\nexport async function generateModEntries(api: types.IExtensionApi,\n                                         source: string[],\n                                         parsedMods: ModsMap,\n                                         cb: ProgressCB): Promise<ModsMap> {\n  const state = api.getState();\n  let existingDownloads: Set<string>;\n  const downloads = util.getSafe(state, ['persistent', 'downloads', 'files'], undefined);\n  if ((downloads !== undefined) && (Object.keys(downloads).length > 0)) {\n    existingDownloads = new Set<string>(\n      Object.keys(downloads).map(key => downloads[key].localPath));\n  }\n  const archives = await getArchives(source[0], parsedMods);\n  const generated: ModsMap = {};\n  for (const archive of archives) {\n    const mod = await createModEntry(source[2], archive, existingDownloads);\n    cb(null, mod.modFilename);\n    generated[mod.modFilename] = mod;\n  }\n  return Promise.resolve(generated);\n}\n\nexport function getLocalAssetUrl(fileName: string) {\n  return pathToFileURL(path.join(__dirname, fileName)).href;\n}\n","import { IModEntry } from '../types/nmmEntries';\r\n\r\nimport Promise from 'bluebird';\r\nimport { actions, types, util } from 'vortex-api';\r\n\r\nexport function addMetaData(gameID: string, modEntries: IModEntry[],\r\n                            api: types.IExtensionApi) {\r\n  Promise.map(modEntries, modEntry => {\r\n    if (!!modEntry.categoryId) {\r\n      api.store.dispatch(\r\n        actions.setDownloadModInfo(modEntry.archiveId, 'custom.category', modEntry.categoryId));\r\n    }\r\n\r\n    if (!!modEntry.nexusId) {\r\n      api.store.dispatch(\r\n        actions.setDownloadModInfo(modEntry.archiveId, 'source', 'nexus'));\r\n      api.store.dispatch(\r\n        actions.setDownloadModInfo(modEntry.archiveId, 'nexus.ids.modId', modEntry.nexusId));\r\n      api.store.dispatch(\r\n        actions.setDownloadModInfo(modEntry.archiveId, 'nexus.ids.gameId', gameID));\r\n\r\n      if (!!modEntry.modVersion) {\r\n        api.store.dispatch(\r\n          actions.setDownloadModInfo(modEntry.archiveId, 'version', modEntry.modVersion));\r\n      }\r\n      api.store.dispatch(\r\n        actions.setDownloadModInfo(modEntry.archiveId, 'game', gameID));\r\n      api.store.dispatch(\r\n        actions.setDownloadModInfo(modEntry.archiveId, 'name', modEntry.modName));\r\n    } else {\r\n      // NMM did not store a modId for this mod. This is a valid\r\n      //  case when a mod has been manually added to NMM.\r\n      //  We're going to try and retrieve the nexus id from the file name\r\n      //  if possible.\r\n      const match = modEntry.modFilename.match(/-([0-9]+)-/);\r\n      if (match !== null) {\r\n        api.store.dispatch(\r\n          actions.setDownloadModInfo(modEntry.archiveId, 'source', 'nexus'));\r\n        api.store.dispatch(\r\n          actions.setDownloadModInfo(modEntry.archiveId, 'nexus.ids.modId', match[1]));\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { setImportStep } from '../actions/session';\n\nimport { ModsCapacityMap, ICapacityInfo } from '../types/capacityTypes';\nimport { IModEntry, ModsMap, ParseError, ProgressCB } from '../types/nmmEntries';\nimport { getCategories } from '../util/categories';\nimport findInstances from '../util/findInstances';\nimport importArchives from '../util/import';\nimport parseNMMConfigFile from '../util/nmmVirtualConfigParser';\n\nimport TraceImport from '../util/TraceImport';\n\nimport {\n  FILENAME, LOCAL, MOD_ID, MOD_NAME, MOD_VERSION,\n} from '../importedModAttributes';\n\nimport * as React from 'react';\nimport {\n  Alert, Button, ListGroup, ListGroupItem, MenuItem,\n  ProgressBar, SplitButton\n} from 'react-bootstrap';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport * as Redux from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport {\n  ComponentEx, EmptyPlaceholder, Icon, ITableRowAction, log, Modal,\n  selectors, Spinner, Steps, Table, Toggle, tooltip, types, util\n} from 'vortex-api';\n\nimport Promise from 'bluebird';\n\nimport {\n  calculateModsCapacity,\n  generateModEntries,\n  getLocalAssetUrl,\n  getCapacityInformation,\n  getCategoriesFilePath,\n  getVirtualConfigFilePath,\n  testAccess,\n  validate,\n} from '../util/util';\n\ntype Step = 'start' | 'setup' | 'working' | 'review';\n\ninterface IConnectedProps {\n  gameId: string;\n  downloadPath: string;\n  installPath: string;\n  importStep?: Step;\n}\n\ninterface IActionProps {\n  onSetStep: (newState: Step) => void;\n}\n\ntype IProps = IConnectedProps & IActionProps;\n\ninterface IComponentState {\n  busy: boolean;\n  sources: string[][];\n  selectedSource: string[];\n  modsToImport: { [id: string]: IModEntry };\n  parsedMods: { [id: string]: IModEntry };\n  error: string;\n  importEnabled: { [id: string]: boolean };\n  counter: number;\n  progress: { mod: string, pos: number };\n  failedImports: string[];\n\n  // Dictates whether we can start the import process.\n  nmmModsEnabled: boolean;\n  nmmRunning: boolean;\n\n  // State of the plugin sorting functionality.\n  autoSortEnabled: boolean;\n\n  // Disk space calculation variables.\n  capacityInformation: ICapacityInfo;\n  modsCapacity: ModsCapacityMap;\n\n  // Array of successfully imported mod entries.\n  successfullyImported: IModEntry[];\n\n  // Dictates whether the installation process\n  //  should be kicked off immediately after the user\n  //  has closed the review page.\n  installModsOnFinish: boolean;\n}\n\nclass ImportDialog extends ComponentEx<IProps, IComponentState> {\n  private static STEPS: Step[] = ['start', 'setup', 'working', 'review'];\n\n  private mStatus: types.ITableAttribute;\n  private mTrace: TraceImport;\n  private actions: ITableRowAction[];\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.initState({\n      busy: false,\n      sources: undefined,\n      modsToImport: undefined,\n      parsedMods: undefined,\n      selectedSource: [],\n      error: undefined,\n      importEnabled: {},\n      modsCapacity: {},\n      counter: 0,\n      progress: undefined,\n      failedImports: [],\n      nmmModsEnabled: false,\n      nmmRunning: false,\n      autoSortEnabled: false,\n\n      capacityInformation: {\n        rootPath: '',\n        totalNeededBytes: 0,\n        totalFreeBytes: 0,\n        hasCalculationErrors: false,\n      },\n\n      installModsOnFinish: false,\n      successfullyImported: [],\n    });\n\n    this.actions = [\n      {\n        icon: 'checkbox-checked',\n        title: 'Import',\n        action: this.importSelected,\n        singleRowAction: false,\n      },\n      {\n        icon: 'checkbox-unchecked',\n        title: 'Don\\'t Import',\n        action: this.dontImportSelected,\n        singleRowAction: false,\n      },\n    ];\n\n    this.mStatus = {\n      id: 'status',\n      name: 'Import',\n      description: 'The import status of the mod',\n      icon: 'level-up',\n      calc: (mod: IModEntry) => this.isModEnabled(mod) ? 'Import' : 'Don\\'t import',\n      placement: 'both',\n      isToggleable: true,\n      isSortable: true,\n      isVolatile: true,\n      edit: {\n        inline: true,\n        choices: () => [\n          { key: 'yes', text: 'Import' },\n          { key: 'no', text: 'Don\\'t import' },\n        ],\n        onChangeValue: (mod: IModEntry, value: any) => {\n          this.nextState.importEnabled[mod.modFilename] = (value === undefined)\n            ? mod.isAlreadyManaged\n              ? !(this.state.importEnabled[mod.modFilename] === true)\n              : !(this.state.importEnabled[mod.modFilename] !== false)\n            : value === 'yes';\n          ++this.nextState.counter;\n          this.recalculate();\n        },\n      },\n    };\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: IProps) {\n    if (this.props.importStep !== newProps.importStep) {\n      if (newProps.importStep === 'start') {\n        this.resetStateData();\n        this.start();\n      } else if (newProps.importStep === 'setup') {\n        this.setup();\n      } else if (newProps.importStep === 'working') {\n        this.startImport();\n      } else if (newProps.importStep === 'review') {\n        this.nextState.successfullyImported = this.getSuccessfullyImported();\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const { t, importStep } = this.props;\n    const { error, sources, capacityInformation } = this.state;\n\n    const canCancel = ((['start', 'setup'].indexOf(importStep) !== -1)\n      || ((importStep === 'working') && (!this.canImport()))\n      || (error !== undefined));\n    const nextLabel = ((sources !== undefined) && (sources.length > 0))\n      ? this.nextLabel(importStep)\n      : undefined;\n\n    const onClick = () => (importStep !== 'review')\n      ? this.next() : this.finish();\n\n    return (\n      <Modal id='import-dialog' show={importStep !== undefined} onHide={this.nop}>\n        <Modal.Header>\n          <Modal.Title>{t('Nexus Mod Manager (NMM) Import Tool')}</Modal.Title>\n          {this.renderCurrentStep()}\n        </Modal.Header>\n        <Modal.Body>\n          {\n            error !== undefined\n              ? <Alert bsStyle='danger'>{error}</Alert>\n              : this.renderContent(importStep)\n          }\n        </Modal.Body>\n        <Modal.Footer>\n          {importStep === 'setup' && capacityInformation.hasCalculationErrors ? (\n            <Alert bsStyle='danger'>\n              {t('Vortex cannot validate NMM\\'s mod/archive files - this usually occurs when '\n                + 'the NMM configuration is corrupt')}\n            </Alert>\n          ) : null}\n          {canCancel ? <Button onClick={this.cancel}>{t('Cancel')}</Button> : null}\n          {nextLabel ? (\n            <Button disabled={this.isNextDisabled()} onClick={onClick}>{nextLabel}</Button>\n          ) : null}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  // Reset all previously set data.\n  private resetStateData() {\n    this.nextState.sources = undefined;\n    this.nextState.modsToImport = undefined;\n    this.nextState.parsedMods = undefined;\n    this.nextState.selectedSource = [];\n    this.nextState.error = undefined;\n    this.nextState.importEnabled = {};\n    this.nextState.counter = 0;\n    this.nextState.progress = undefined;\n    this.nextState.failedImports = [];\n    this.nextState.capacityInformation = {\n      rootPath: '',\n      totalNeededBytes: 0,\n      totalFreeBytes: 0,\n      hasCalculationErrors: false,\n    };\n    this.nextState.installModsOnFinish = false;\n    this.nextState.autoSortEnabled = false;\n    this.nextState.successfullyImported = [];\n  }\n\n  private canImport() {\n    const { nmmModsEnabled, nmmRunning } = this.state;\n    return !nmmModsEnabled && !nmmRunning;\n  }\n\n  private onGroupAction(entries: string[], enable: boolean) {\n    const { importEnabled, modsToImport } = this.state;\n    if (modsToImport === undefined) {\n      // happens if there are no NMM mods for this game\n      return Promise.resolve();\n    }\n    entries.forEach((key: string) => {\n      if (importEnabled[key] !== undefined && importEnabled[key] === enable) {\n        return;\n      }\n\n      // We're going to assign this value even if importEnabled object doesn't have\n      //  a record of this key - which is a valid case when we just open up the\n      //  NMM tool.\n      this.nextState.importEnabled[key] = enable;\n    });\n\n    this.recalculate();\n  }\n\n  private importSelected = (entries) => {\n    this.onGroupAction(entries, true);\n  }\n\n  private dontImportSelected = (entries) => {\n    this.onGroupAction(entries, false);\n  }\n\n  private recalculate() {\n    const { modsToImport } = this.state;\n    const validCalcState = ((modsToImport !== undefined)\n      && (Object.keys(modsToImport).length > 0));\n    this.nextState.capacityInformation.hasCalculationErrors = false;\n    this.nextState.capacityInformation.totalNeededBytes = validCalcState\n      ? this.calcArchiveFiles()\n      : 0;\n  }\n\n  private getModNumber(): string {\n    const { modsToImport } = this.state;\n    if (modsToImport === undefined) {\n      return undefined;\n    }\n\n    const modList = Object.keys(modsToImport).map(id => modsToImport[id]);\n    const enabledMods = modList.filter(mod => this.isModEnabled(mod));\n\n    return `${enabledMods.length} / ${modList.length}`;\n  }\n\n  private onStartUp(): Promise<void> {\n    const { selectedSource } = this.state;\n    const { parsedMods } = this.nextState;\n    if (selectedSource === undefined || parsedMods === undefined) {\n      // happens if there are no NMM mods for this game, or if we were\n      //  unable to find source instances.\n      return Promise.resolve();\n    }\n\n    const progCB = (err: Error, mod: string) => {\n      if (err) {\n        this.nextState.capacityInformation.hasCalculationErrors = true;\n      }\n      this.nextState.progress = { mod, pos: 0 };\n    };\n    return this.populateModsTable(progCB)\n      .then(mods => {\n        this.nextState.modsToImport = mods;\n        const modList = Object.keys(mods)\n          .map(id => mods[id]);\n      return this.getModsCapacity(modList, progCB);\n    });\n  }\n\n  private getModsCapacity(modList: IModEntry[], cb: ProgressCB): Promise<void> {\n    return (calculateModsCapacity(modList, cb) as any)\n      .then((modCapacityInfo) => {\n        this.nextState.modsCapacity = modCapacityInfo;\n        this.recalculate();\n      });\n  }\n\n  private calcArchiveFiles(): number {\n    const { modsCapacity, modsToImport } = this.nextState;\n    return Object.keys(modsCapacity)\n      .filter(id => this.modWillBeEnabled(modsToImport[id]))\n      .map(id => modsCapacity[id])\n      .reduce((total, archiveBytes) => total + archiveBytes, 0);\n  }\n\n  // To be used after the import process finished. Will return\n  //  an array containing successfully imported archives.\n  private getSuccessfullyImported(): IModEntry[] {\n    const { failedImports, modsToImport } = this.state;\n    const enabledMods = Object.keys(modsToImport ?? [])\n      .map(id => modsToImport[id])\n      .filter(mod => this.isModEnabled(mod));\n\n    if (failedImports === undefined || failedImports.length === 0) {\n      return enabledMods;\n    }\n\n    return enabledMods.filter(mod =>\n      failedImports.find(fail => fail === mod.modName) === undefined);\n  }\n\n  private renderCapacityInfo(instance: ICapacityInfo): JSX.Element {\n    const { t } = this.props;\n    return (\n      <div>\n        <h3\n          className={(instance.totalNeededBytes > instance.totalFreeBytes)\n            ? 'disk-space-insufficient'\n            : 'disk-space-sufficient'}\n        >\n          {\n            t('{{rootPath}} - Size required: {{required}} / {{available}}', {\n              replace: {\n                rootPath: instance.rootPath,\n                required: instance.hasCalculationErrors\n                  ? '???'\n                  : util.bytesToString(instance.totalNeededBytes),\n                available: util.bytesToString(instance.totalFreeBytes),\n              },\n            })}\n        </h3>\n      </div>\n    );\n  }\n\n  private isNextDisabled = () => {\n    const { importStep } = this.props;\n    const { error, modsToImport, capacityInformation } = this.state;\n\n    const enabled = (modsToImport !== undefined)\n      ? Object.keys(modsToImport).filter(id => this.isModEnabled(modsToImport[id]))\n      : [];\n\n    // We don't want to fill up the user's harddrive.\n    const totalFree = capacityInformation.totalFreeBytes;\n    const hasSpace = capacityInformation.totalNeededBytes > totalFree;\n    return (error !== undefined)\n      || ((importStep === 'setup') && (modsToImport === undefined))\n      || ((importStep === 'setup') && (enabled.length === 0))\n      || ((importStep === 'setup') && (hasSpace));\n  }\n\n  private renderCurrentStep(): JSX.Element {\n    const { t, importStep } = this.props;\n\n    return (\n      <Steps step={importStep} style={{ marginBottom: 32 }}>\n        <Steps.Step\n          key='start'\n          stepId='start'\n          title={t('Start')}\n          description={t('Introduction')}\n        />\n        <Steps.Step\n          key='setup'\n          stepId='setup'\n          title={t('Setup')}\n          description={t('Select Mods to import')}\n        />\n        <Steps.Step\n          key='working'\n          stepId='working'\n          title={t('Import')}\n          description={t('Magic happens')}\n        />\n        <Steps.Step\n          key='review'\n          stepId='review'\n          title={t('Review')}\n          description={t('Import result')}\n        />\n      </Steps>\n    );\n  }\n\n  private openLink = (evt: React.MouseEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n    const link = evt.currentTarget.getAttribute('data-link');\n    util.opn(link).catch(() => null);\n  }\n\n  private getLink(link: string, text: string): JSX.Element {\n    const { t } = this.props;\n    return (<a data-link={link} onClick={this.openLink}>{t(`${text}`)}</a>);\n  }\n\n  private renderContent(state: Step): JSX.Element {\n    switch (state) {\n      case 'start': return this.renderStart();\n      case 'setup': return this.renderSelectMods();\n      case 'working': return (this.canImport()) ? this.renderWorking() : this.renderValidation();\n      case 'review': return this.renderReview();\n      default: return null;\n    }\n  }\n\n  private renderStart(): JSX.Element {\n    const { t } = this.props;\n    const { sources, selectedSource } = this.state;\n\n    const positives: string[] = [\n      'Copy over all archives found inside the selected NMM installation.',\n\n      'Provide the option to install imported archives at the end of the '\n      + 'import process.',\n\n      'Leave your existing NMM installation disabled, but functionally intact.',\n    ];\n\n    const negatives: string[] = [\n      'Import any mod files in your data folder that are not managed by NMM.',\n\n      'Import your FOMOD options.',\n\n      'Preserve your plugin load order, as plugins will be rearranged according '\n      + 'to LOOT rules once enabled.',\n    ];\n\n    const renderItem = (text: string, idx: number, positive: boolean): JSX.Element => (\n      <div key={idx} className='import-description-item'>\n        <Icon name={positive ? 'feedback-success' : 'feedback-error'} />\n        <p>{t(text)}</p>\n      </div>\n    );\n\n    const renderPositives = (): JSX.Element => (\n      <div className='import-description-column import-description-positive'>\n        <h4>{t('The import tool will:')}</h4>\n        <span>\n          {positives.map((positive, idx) => renderItem(positive, idx, true))}\n        </span>\n      </div>\n    );\n\n    const renderNegatives = (): JSX.Element => (\n      <div className='import-description-column import-description-negative'>\n        <h4>{t('The import tool won’t:')}</h4>\n        <span>\n          {negatives.map((negative, idx) => renderItem(negative, idx, false))}\n        </span>\n      </div>\n    );\n\n    return (\n      <span\n        className='import-start-container'\n      >\n        <div>\n          {t('This is an import tool that allows you to bring your mod archives over from an '\n            + 'existing NMM installation.')} <br />\n        </div>\n        <div className='start-info'>\n          {renderPositives()}\n          {renderNegatives()}\n        </div>\n        {sources === undefined\n          ? <Spinner />\n          : sources.length === 0\n            ? this.renderNoSources()\n            : this.renderSources(sources, selectedSource)\n        }\n      </span>\n    );\n  }\n\n  private renderNoSources(): JSX.Element {\n    const { t } = this.props;\n\n    return (\n      <span className='import-errors'>\n        <Icon name='feedback-error' />\n        {' '}\n        {t('No NMM install found with mods for this game. ' +\n          'Please note that only NMM >= 0.63 is supported.')}\n      </span>\n    );\n  }\n\n  private renderSources(sources: string[][], selectedSource: string[]): JSX.Element {\n    const { t } = this.props;\n\n    return (\n      <div>\n        {t('If you have multiple instances of NMM installed you can select which one '\n          + 'to import here:')}\n        <br />\n        <SplitButton\n          id='import-select-source'\n          title={selectedSource !== undefined ? selectedSource[0] || '' : ''}\n          onSelect={this.selectSource}\n        >\n          {sources.map(this.renderSource)}\n        </SplitButton>\n      </div>\n    );\n  }\n\n  private renderSource = option => {\n    return <MenuItem key={option} eventKey={option}>{option[0]}</MenuItem>;\n  }\n\n  private toggleInstallOnFinish = () => {\n    const { installModsOnFinish } = this.state;\n    this.nextState.installModsOnFinish = !installModsOnFinish;\n  }\n\n  private revalidate = () => {\n    const { selectedSource } = this.state;\n    return validate(selectedSource[0])\n      .then(res => {\n        this.nextState.nmmModsEnabled = res.nmmModsEnabled;\n        this.nextState.nmmRunning = res.nmmRunning;\n        this.nextState.busy = false;\n      });\n  }\n\n  private renderValidation(): JSX.Element {\n    const { t } = this.props;\n    const { busy, nmmModsEnabled, nmmRunning } = this.state;\n    const content = (\n      <div className='is-not-valid'>\n        <div className='not-valid-title'>\n          <Icon name='input-cancel' />\n          <h2>{t('Can\\'t continue')}</h2>\n        </div>\n        <ListGroup>\n          {nmmModsEnabled ? (\n            <ListGroupItem>\n              <h4>{t('Please disable all mods in NMM')}</h4>\n              <p>\n                {t('NMM and Vortex would interfere with each other if they both '\n                  + 'tried to manage the same mods.')}\n                {t('You don\\'t have to uninstall the mods, just disable them.')}\n              </p>\n              <img src={getLocalAssetUrl('disablenmm.png')} />\n            </ListGroupItem>\n          ) : null}\n          {nmmRunning ? (\n            <ListGroupItem>\n              <h4>{t('Please close NMM')}</h4>\n              <p>\n                {t('NMM needs to be closed during the import process and generally '\n                  + 'while Vortex is installing mods otherwise it may interfere.')}\n              </p>\n            </ListGroupItem>\n          ) : null}\n        </ListGroup>\n        <div className='revalidate-area'>\n          <tooltip.IconButton\n            id='revalidate-button'\n            icon={busy ? 'spinner' : 'refresh'}\n            tooltip={busy ? t('Checking') : t('Check again')}\n            disabled={busy}\n            onClick={this.revalidate}\n          >\n            {t('Check again')}\n          </tooltip.IconButton>\n        </div>\n      </div>\n    );\n\n    return content;\n  }\n\n  private renderSelectMods(): JSX.Element {\n    const { t } = this.props;\n    const { counter, modsToImport, progress, capacityInformation } = this.state;\n\n    const calcProgress = (!!progress)\n      ? (\n        <span>\n          <h3>\n            {t('Calculating required disk space. Thank you for your patience.')}\n          </h3>\n          {t('Scanning: {{mod}}', { replace: { mod: progress.mod } })}\n        </span>\n      )\n      : (\n        <span>\n          <h3>\n            {t('Processing NMM cache information. Thank you for your patience.')}\n          </h3>\n          {t('Looking up archives..')}\n        </span>\n      );\n\n    const content = (modsToImport === undefined)\n      ? (\n        <div className='status-container'>\n          <Icon name='spinner' />\n          {calcProgress}\n        </div>\n      ) : (\n        <Table\n          tableId='mods-to-import'\n          data={modsToImport}\n          dataId={counter}\n          actions={this.actions}\n          staticElements={[\n            this.mStatus, MOD_ID, MOD_NAME, MOD_VERSION, FILENAME, LOCAL]}\n        />\n      );\n    const modNumberText = this.getModNumber();\n    return (\n      <div className='import-mods-selection'>\n        {content}\n        {(modNumberText !== undefined)\n          ? (\n            <div>\n              <h3>{t(`Importing: ${this.getModNumber()} mods`)}</h3>\n              {this.renderCapacityInfo(capacityInformation)}\n            </div>\n          )\n          : null}\n      </div>\n    );\n  }\n\n  private renderWorking(): JSX.Element {\n    const { t } = this.props;\n    const { progress, modsToImport } = this.state;\n    if (progress === undefined) {\n      return null;\n    }\n    const enabledMods = Object.keys(modsToImport).filter(id => this.isModEnabled(modsToImport[id]));\n    const perc = Math.floor((progress.pos * 100) / enabledMods.length);\n    return (\n      <div className='import-working-container'>\n        <EmptyPlaceholder\n          icon='folder-download'\n          text={t('Importing Mods...')}\n          subtext={t('This might take a while, please be patient')}\n        />\n        {t('Currently importing: {{mod}}', { replace: { mod: progress.mod } })}\n        <ProgressBar now={perc} label={`${perc}%`} />\n      </div>\n    );\n  }\n\n  private renderEnableModsOnFinishToggle(): JSX.Element {\n    const { t } = this.props;\n    const { successfullyImported, installModsOnFinish } = this.state;\n\n    return successfullyImported.length > 0 ? (\n      <div>\n        <Toggle\n          checked={installModsOnFinish}\n          onToggle={this.toggleInstallOnFinish}\n        >\n          {t('Install imported mods')}\n        </Toggle>\n      </div>\n    ) : null;\n  }\n\n  private renderReviewSummary(): JSX.Element {\n    const { t } = this.props;\n    const { successfullyImported } = this.state;\n\n    return successfullyImported.length > 0 ? (\n      <div>\n        {t('Your selected mod archives have been imported successfully. You can decide now ')}\n        {t('whether you would like to start the installation for all imported mods,')} <br />\n        {t('or whether you want to install these yourself at a later time.')}<br /><br />\n        {this.renderEnableModsOnFinishToggle()}\n      </div>\n    ) : null;\n  }\n\n  private renderReview(): JSX.Element {\n    const { t } = this.props;\n    const { failedImports } = this.state;\n\n    return (\n      <div className='import-working-container'>\n        {\n          failedImports.length === 0\n            ? (\n              <span className='import-success'>\n                <Icon name='feedback-success' /> {t('Import successful')}<br />\n              </span>\n            ) : (\n              <span className='import-errors'>\n                <Icon name='feedback-error' /> {t('There were errors')}\n              </span>\n            )\n        }\n        <span className='import-review-text'>\n          {t('You can review the log at: ')}\n          <a onClick={this.openLog}>{this.mTrace.logFilePath}</a>\n        </span><br /><br />\n        <span>\n          {this.renderReviewSummary()}\n          <br /><br />\n        </span>\n      </div>\n    );\n  }\n\n  private openLog = (evt) => {\n    evt.preventDefault();\n    (util as any).opn(this.mTrace.logFilePath).catch(err => undefined);\n  }\n\n  private nextLabel(step: Step): string {\n    const { t } = this.props;\n    switch (step) {\n      case 'start': return t('Next');\n      case 'setup': return t('Start Import');\n      case 'working': return null;\n      case 'review': return t('Finish');\n    }\n  }\n\n  private selectSource = eventKey => {\n    this.nextState.selectedSource = eventKey;\n  }\n\n  private nop = () => undefined;\n\n  private cancel = () => {\n    this.props.onSetStep(undefined);\n  }\n\n  private next() {\n    const { onSetStep, importStep } = this.props;\n    const currentIdx = ImportDialog.STEPS.indexOf(importStep);\n    onSetStep(ImportDialog.STEPS[currentIdx + 1]);\n  }\n\n  private finish() {\n    const { installModsOnFinish } = this.state;\n\n    // We're only interested in the mods we actually managed to import.\n    const imported = this.getSuccessfullyImported();\n\n    // If we did not succeed in importing anything, there's no point in\n    //  enabling anything.\n    if (imported.length === 0) {\n      this.next();\n      return;\n    }\n\n    // Check whether the user wants Vortex to automatically install all imported\n    //  mod archives.\n    if (installModsOnFinish) {\n      this.installMods(imported);\n    }\n\n    this.next();\n  }\n\n  private installMods(modEntries: IModEntry[]) {\n    const state = this.context.api.store.getState();\n    const downloads = util.getSafe(state, ['persistent', 'downloads', 'files'], undefined);\n    if (downloads === undefined) {\n      // We clearly didn't manage to import anything.\n      return Promise.reject(new Error('persistent.downloads.files is empty!'));\n    }\n\n    const archiveIds = Object.keys(downloads).filter(key =>\n      modEntries.find(mod => mod.modFilename === downloads[key].localPath) !== undefined);\n    return Promise.each(archiveIds, archiveId => {\n      this.context.api.events.emit('start-install-download', archiveId, true);\n    });\n  }\n\n  private start() {\n    const { downloadPath } = this.props;\n    this.nextState.error = undefined;\n\n    // Store the initial value of the plugin sorting functionality (if it's even applicable)\n    this.nextState.autoSortEnabled = util.getSafe(this.context.api.store.getState(),\n      ['settings', 'plugins', 'autosort'], false);\n\n    try {\n      const capInfo = getCapacityInformation(downloadPath);\n      this.nextState.capacityInformation = {\n        ...this.state.capacityInformation,\n        rootPath: capInfo.rootPath,\n        totalFreeBytes: capInfo.totalFreeBytes\n      };\n    } catch (err) {\n      this.context.api.showErrorNotification('Unable to start import process', err, {\n        // don't allow report on \"not found\" and permission errors\n        allowReport: [2, 3, 5].indexOf(err.systemCode) === -1,\n      });\n      this.cancel();\n    }\n\n    return findInstances(this.props.gameId)\n      .then(found => {\n        this.nextState.sources = found;\n        this.nextState.selectedSource = found[0];\n      })\n      .catch(err => {\n        this.nextState.error = err.message;\n      });\n  }\n\n  private setup() {\n    const { gameId } = this.props;\n    const state: types.IState = this.context.api.store.getState();\n    const mods = state.persistent.mods[gameId] || {};\n    const virtualPath = getVirtualConfigFilePath(this.state.selectedSource[0]);\n    return testAccess(this.props.t, this.state.selectedSource[2])\n      .then(() => parseNMMConfigFile(virtualPath, mods))\n      .catch(err => (err instanceof ParseError)\n        ? Promise.resolve([])\n        : Promise.reject(err))\n      .then((modEntries: IModEntry[]) => {\n        this.nextState.parsedMods = modEntries.reduce((prev, value) => {\n          // modfilename appears to be the only field that we can rely on being set and it being\n          // unique\n          prev[value.modFilename] = value;\n          return prev;\n        }, {});\n      })\n      .catch(err => {\n        this.nextState.error = err.message;\n      }).finally(() => this.onStartUp());\n  }\n\n  private populateModsTable(cb: ProgressCB): Promise<ModsMap> {\n    const { t } = this.props;\n    const { selectedSource, parsedMods } = this.state;\n    const api = this.context.api;\n    return (generateModEntries(api, selectedSource, parsedMods, cb) as any)\n      .catch(err => {\n        log('error', 'Failed to create mod entry', err);\n        const errorMessage = (err.code === 'EPERM')\n          ? t('\"{{permFile}}\" is access protected. Please ensure your account has '\n            + 'full read/write permissions to your game\\'s NMM mods folder and try again.',\n            { replace: { permFile: err.path } })\n          : err.message;\n        this.nextState.error = errorMessage;\n        return Promise.resolve({});\n      });\n  }\n\n  private modWillBeEnabled(mod: IModEntry): boolean {\n    return ((this.nextState.importEnabled[mod.modFilename] !== false) &&\n      !((this.nextState.importEnabled[mod.modFilename] === undefined) && mod.isAlreadyManaged));\n  }\n\n  private isModEnabled(mod: IModEntry): boolean {\n    return ((this.state.importEnabled[mod.modFilename] !== false) &&\n      !((this.state.importEnabled[mod.modFilename] === undefined) && mod.isAlreadyManaged));\n  }\n\n  private startImport() {\n    const { gameId } = this.props;\n    const { autoSortEnabled, modsToImport, selectedSource } = this.state;\n\n    if (autoSortEnabled) {\n      // We don't want the sorting functionality to kick off as the user\n      //  is removing plugins through NMM with Vortex open.\n      this.context.api.events.emit('autosort-plugins', false);\n    }\n\n    const startImportProcess = (): Promise<void> => {\n      if (autoSortEnabled) {\n        // If we're able to start the import process, then clearly\n        //  the user had already disabled the mods through NMM\n        //  should be safe to turn autosort back on.\n        this.context.api.events.emit('autosort-plugins', true);\n      }\n\n      try {\n        this.mTrace = new TraceImport();\n      } catch (err) {\n        if (err.code === 'EEXIST') {\n          return Promise.delay(1000).then(() => startImportProcess());\n        } else {\n          this.context.api.showErrorNotification(\n            'Failed to initialize trace log for NMM import', err);\n          return Promise.resolve();\n        }\n      }\n      const modList = Object.keys(modsToImport).map(id => modsToImport[id]);\n      const enabledMods = modList.filter(mod => this.isModEnabled(mod));\n      const modsPath = selectedSource[2];\n      this.mTrace.initDirectory(selectedSource[0]);\n      // The categories.xml file seems to be created by NMM inside its defined \"modFolder\"\n      //  and not inside the virtual folder.\n      return getCategories(getCategoriesFilePath(modsPath))\n        .catch(err => {\n          // Do not stop the import process just because we can't import categories.\n          this.mTrace.log('error', 'Failed to import categories from NMM', err);\n          return Promise.resolve({});\n        })\n        .then(categories => {\n          this.mTrace.log('info', 'NMM Mods (count): ' + modList.length +\n            ' - Importing (count):' + enabledMods.length);\n          this.context.api.events.emit('enable-download-watch', false);\n\n          return importArchives(this.context.api, gameId, this.mTrace, modsPath, enabledMods,\n            categories, (mod: string, pos: number) => {\n              this.nextState.progress = { mod, pos };\n            })\n            .then(errors => {\n              this.context.api.events.emit('enable-download-watch', true);\n              this.nextState.failedImports = errors;\n              this.props.onSetStep('review');\n            });\n        })\n        .catch(err => {\n          this.context.api.events.emit('enable-download-watch', true);\n          this.nextState.error = err.message;\n        });\n    };\n\n    const validateLoop = () => this.canImport()\n      ? startImportProcess()\n      : setTimeout(() => validateLoop(), 2000);\n\n    this.nextState.busy = true;\n    return this.revalidate()\n      .then(() => validateLoop());\n  }\n}\n\nfunction mapStateToProps(state: any): IConnectedProps {\n  const gameId = selectors.activeGameId(state);\n\n  return {\n    gameId,\n    importStep: state.session.modimport.importStep || undefined,\n    downloadPath: selectors.downloadPath(state),\n    installPath: gameId !== undefined ? selectors.installPathForGame(state, gameId) : undefined,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: ThunkDispatch<any, null, Redux.Action>): IActionProps {\n  return {\n    onSetStep: (step?: Step) => dispatch(setImportStep(step)),\n  };\n}\n\nexport default withTranslation(['common'])(\n  connect(mapStateToProps, mapDispatchToProps)(\n    ImportDialog) as any) as React.ComponentClass<{}>;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","module.exports = require(\"bluebird\");","module.exports = require(\"modmeta-db\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-i18next\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux-act\");","module.exports = require(\"util\");","module.exports = require(\"vortex-api\");","module.exports = require(\"winapi-bindings\");","module.exports = require(\"crypto\");","module.exports = require(\"os\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}