{"version":3,"file":"index.js","mappings":"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","sources":["webpack://quickbms-support/./src/AttribDashlet.tsx","webpack://quickbms-support/./src/index.ts","webpack://quickbms-support/./src/quickbms.ts","webpack://quickbms-support/./src/types.ts","webpack://quickbms-support/external commonjs2 \"bluebird\"","webpack://quickbms-support/external node-commonjs \"child_process\"","webpack://quickbms-support/external commonjs2 \"path\"","webpack://quickbms-support/external commonjs2 \"react\"","webpack://quickbms-support/external commonjs2 \"react-i18next\"","webpack://quickbms-support/external commonjs2 \"vortex-api\"","webpack://quickbms-support/webpack/bootstrap","webpack://quickbms-support/webpack/before-startup","webpack://quickbms-support/webpack/startup","webpack://quickbms-support/webpack/after-startup"],"sourcesContent":["import * as React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { PureComponentEx, util } from 'vortex-api';\n\nconst DOWNLOAD_PAGE = 'https://aluigi.altervista.org/quickbms.htm';\n\nimport * as api from 'vortex-api';\nconst { Dashlet } = api as any;\n\nclass QBMSAttribDashlet extends PureComponentEx<{}, {}> {\n  public render() {\n    const { t } = this.props;\n    return (\n      <Dashlet\n        title={t('Support for this game is made possible using QuickBMS')}\n        className='dashlet-quickbms'\n      >\n        <div>\n          {t('Special thanks to {{author}} for developing this tool',\n          { replace: { author: 'Luigi Auriemma' }})}\n        </div>\n        <div>\n          {t('You can find the QBMS home page: ')}\n          <a onClick={this.openQBMSPage}>{DOWNLOAD_PAGE}</a>\n        </div>\n      </Dashlet>\n    );\n  }\n\n  private openQBMSPage = () => {\n    (util as any).opn(DOWNLOAD_PAGE).catch(err => null);\n  }\n}\n\nexport default withTranslation(['common', 'qbms-support'])\n  (QBMSAttribDashlet as any) as React.ComponentClass<{}>;\n","import path from 'path';\n\nimport AttribDashlet from './AttribDashlet';\nimport { IAttachmentData, IListEntry, IQBMSOpProps, IQBMSOptions,\n  QBMSOperationType, QuickBMSError, UnregisteredGameError } from './types';\n\nimport { fs, log, selectors, types, util } from 'vortex-api';\n\nconst GAME_SUPPORT: string[] = [];\nconst DEPRECATED_NOTIF_ID = 'deprecated-qbms-call';\n\nlet _GAMEMODE_SUPPORTED = false;\n\nfunction showAttrib(state: types.IState) {\n  const gameMode = selectors.activeGameId(state);\n  return GAME_SUPPORT.includes(gameMode);\n}\n\nfunction queryAttachment(data: IAttachmentData) {\n  return fs.statAsync(data.filePath)\n    .then(() => Promise.resolve(data))\n    .catch(err => Promise.resolve(undefined));\n}\n\nasync function successfulOp(context: types.IExtensionContext, props: IQBMSOpProps, data?: any) {\n  const id = 'qbms-success-notif';\n  const state = context.api.store.getState();\n  const notifications = util.getSafe(state, ['session', 'notifications', 'notifications'], []);\n  if ((props.quiet !== true) && notifications.find(notif => notif.id === id) === undefined) {\n    context.api.sendNotification({\n      id,\n      type: 'success',\n      message: 'QBMS operation completed',\n      displayMS: 3000,\n    });\n  }\n  if (props.callback !== undefined) {\n    props.callback(undefined, data);\n  }\n  return Promise.resolve();\n}\n\nasync function errorHandler(api: types.IExtensionApi,\n                            props: IQBMSOpProps, err: any): Promise<void> {\n  const { callback, gameMode } = props;\n  const state = api.store.getState();\n  const contributed = selectors.gameById(state, gameMode)?.contributed;\n  const mods = util.getSafe(state, ['persistent', 'mods', gameMode], {});\n  const modKeys = Object.keys(mods);\n  const attachments: types.IAttachment[] = [{\n    id: 'installedMods',\n    type: 'data',\n    data: modKeys.join('\\n') || 'None',\n    description: 'List of installed mods',\n  }];\n\n  const qbmsLog: IAttachmentData = {\n    filePath: path.join(util.getVortexPath('userData'), 'quickbms.log'),\n    description: 'QuickBMS log file',\n  };\n\n  const vortexLog: IAttachmentData = {\n    filePath: path.join(util.getVortexPath('userData'), 'vortex.log'),\n    description: 'Vortex log file',\n  };\n\n  let addedAttachments: IAttachmentData[] = [];\n  if (props.additionalAttachments !== undefined) {\n    addedAttachments = await props.additionalAttachments();\n  }\n\n  if (err instanceof UnregisteredGameError) {\n    err['message'] += ' - did you forget to call qbmsRegisterGame?';\n  } else if (err instanceof QuickBMSError) {\n    err['message'] += '\\n\\n' + (err as QuickBMSError).errorLines;\n  }\n\n  return Promise.all([qbmsLog, vortexLog, ...addedAttachments].map(file => queryAttachment(file)))\n    .then(files => {\n      const validAttachments = files.filter(file => !!file);\n      validAttachments.forEach(att => {\n        attachments.push({\n          id: path.basename(att.filePath),\n          type: 'file',\n          data: att.filePath,\n          description: att.description,\n        });\n      });\n    })\n    .then(() => {\n      if (_GAMEMODE_SUPPORTED) {\n        if (props.quiet !== true) {\n          api.showErrorNotification('failed to execute qbms operation', err,\n            { allowReport: contributed !== undefined, attachments });\n        }\n\n        if (callback) {\n          callback(err, undefined);\n        }\n      } else {\n        if (callback) {\n          log('info', 'qbms encountered an error', err.message);\n          callback(new util.ProcessCanceled('[QBMS] ' + err.message), undefined);\n        }\n      }\n    });\n}\n\nfunction testGameRegistered(props: IQBMSOpProps): Promise<void> {\n  return (!GAME_SUPPORT.includes(props.gameMode))\n    ? Promise.reject(new UnregisteredGameError(props.gameMode))\n    : Promise.resolve();\n}\n\nfunction sanitizeProps(props: IQBMSOpProps, opType: QBMSOperationType): IQBMSOpProps {\n  if (props.qbmsOptions === undefined) {\n    props.qbmsOptions = {\n      wildCards: ['{}'],\n    };\n  }\n\n  if (opType === 'reimport' && props.qbmsOptions.allowResize === undefined) {\n    // default to reimport method 1\n    props.qbmsOptions.allowResize = false;\n  }\n\n  if (opType === 'write' && props.operationPath !== undefined && props.operationPath.endsWith(path.sep)) {\n    props.operationPath = props.operationPath.substr(0, props.operationPath.length - 1);\n  }\n\n  return props;\n}\n\nfunction list(context: types.IExtensionContext, props: IQBMSOpProps) {\n  props = sanitizeProps(props, 'list');\n  return require('./quickbms').list(props)\n    .then(listEntries => (props.callback !== undefined)\n      ? successfulOp(context, props, listEntries)\n      : Promise.resolve())\n    .catch(err => errorHandler(context.api, props, err));\n}\n\nfunction extract(context: types.IExtensionContext, props: IQBMSOpProps) {\n  props = sanitizeProps(props, 'extract');\n  return require('./quickbms').extract(props)\n    .then(() => (props.callback !== undefined)\n      ? successfulOp(context, props)\n      : Promise.resolve())\n    .catch(err => errorHandler(context.api, props, err));\n}\n\nfunction write(context: types.IExtensionContext, props: IQBMSOpProps) {\n  props = sanitizeProps(props, 'write');\n  return require('./quickbms').write(props)\n    .then(() => (props.callback !== undefined)\n      ? successfulOp(context, props)\n      : Promise.resolve())\n    .catch(err => errorHandler(context.api, props, err));\n}\n\nfunction reImport(context: types.IExtensionContext, props: IQBMSOpProps) {\n  props = sanitizeProps(props, 'reimport');\n  return require('./quickbms').reImport(props)\n    .then(() => (props.callback !== undefined)\n      ? successfulOp(context, props)\n      : Promise.resolve())\n    .catch(err => errorHandler(context.api, props, err));\n}\n\nfunction raiseDeprecatedAPINotification(context: types.IExtensionContext) {\n  const state = context.api.store.getState();\n  const notifications = util.getSafe(state,\n    ['session', 'notifications', 'notifications'], []);\n  if (notifications.find(not => not.id === DEPRECATED_NOTIF_ID) === undefined) {\n    context.api.sendNotification({\n      id: DEPRECATED_NOTIF_ID,\n      message: 'Game extension is using deprecated QBMS API calls',\n      type: 'warning',\n      noDismiss: true,\n      actions: [\n        {\n          title: 'More',\n          action: () => context.api.showDialog('info', 'Deprecated QB API',\n          {\n            text: 'This extension is using deprecated QBMS API calls which will eventually be removed - '\n                + 'please inform the extension developer to update it ASAP!',\n          }, [{ label: 'Close' }]),\n        },\n      ],\n    });\n  }\n}\n\nfunction init(context: types.IExtensionContext) {\n  context.registerDashlet('QBMS Support', 1, 2, 250, AttribDashlet,\n    showAttrib, () => ({}), undefined);\n\n  context.registerAPI('qbmsRegisterGame', (gameMode: string) => {\n    GAME_SUPPORT.push(gameMode);\n  }, { minArguments: 1 });\n\n  context.registerAPI('qbmsList', (props: IQBMSOpProps) =>\n    list(context, props), { minArguments: 1 });\n  context.registerAPI('qbmsExtract', (props: IQBMSOpProps) =>\n    extract(context, props), { minArguments: 1 });\n  context.registerAPI('qbmsWrite', (props: IQBMSOpProps) =>\n    write(context, props), { minArguments: 1 });\n  context.registerAPI('qbmsReimport', (props: IQBMSOpProps) =>\n    reImport(context, props), { minArguments: 1 });\n\n  context.once(() => {\n    context.api.events.on('gamemode-activated', (gameMode: string) => {\n      context.api.dismissNotification(DEPRECATED_NOTIF_ID);\n      _GAMEMODE_SUPPORTED = GAME_SUPPORT.includes(gameMode);\n    });\n    context.api.events.on('quickbms-operation', (\n      bmsScriptPath: string,\n      archivePath: string,\n      inPath: string,\n      opType: QBMSOperationType,\n      options: IQBMSOptions,\n      callback: (err: Error, data: IListEntry[]) => void) => {\n        // Leaving this here temporarily for backwards compatibility\n        raiseDeprecatedAPINotification(context);\n\n        const state = context.api.store.getState();\n        const activeGameId = selectors.activeGameId(state);\n        const props: IQBMSOpProps = {\n          gameMode: activeGameId,\n          bmsScriptPath,\n          archivePath,\n          operationPath: inPath,\n          qbmsOptions: options,\n          callback,\n        };\n\n        if (!GAME_SUPPORT.includes(activeGameId)) {\n          // Not a registered game.\n          return testGameRegistered(props)\n            .catch(err => errorHandler(context.api, props, err));\n        }\n\n        switch (opType) {\n          case 'extract':\n            return extract(context, props);\n          case 'reimport':\n            return reImport(context, props);\n          case 'write':\n            return write(context, props);\n          case 'list':\n          default:\n            return list(context, props);\n        }\n      });\n  });\n\n  return true;\n}\n\nexport default init;\n","import { IListEntry, IQBMSOpProps, IQBMSOptions, QuickBMSError } from './types';\r\n\r\nimport Promise from 'bluebird';\r\nimport { spawn } from 'child_process';\r\nimport * as path from 'path';\r\n\r\nimport { fs, log, util } from 'vortex-api';\r\n\r\nconst FILTER_FILE_PATH = path.join(util.getVortexPath('userData'), 'temp', 'qbms', 'filters.txt');\r\nconst LOG_FILE_PATH = path.join(util.getVortexPath('userData'), 'quickbms.log');\r\nconst TIMEOUT_MSEC = 15000;\r\nconst CHECK_TIME_MSEC = 5000;\r\n\r\nconst QUICK_BMS_ERRORMSG = [\r\n  'success', // 0\r\n  'encountered an unknown error', // 1\r\n  'unable to allocate memory, memory errors', // 2\r\n  'missing input file', // 3\r\n  'unable to write output file', // 4\r\n  'file compression error (Review BMS script)', // 5\r\n  'file encryption error (Review BMS script)', // 6\r\n  'external dll file has reported an error', // 7\r\n  'BMS script syntax error', // 8\r\n  'invalid quickbms arguments provided', // 9\r\n  'error accessing input/output folder', // 10\r\n  'user/external application has terminated quickBMS', // 11\r\n  'extra IO error', // 12\r\n  'failed to update quickbms', // 13\r\n  'QBMS has timed out', // 14 - this is reported by the timeout functionality.\r\n];\r\n\r\nfunction quote(input: string): string {\r\n  return '\"' + input + '\"';\r\n}\r\n\r\nfunction parseList(input: string, wildCards: string[]): IListEntry[] {\r\n  const lines = input.split('\\n');\r\n  const wildCardRgx = /{}|\\*/g;\r\n  const regexps: RegExp[] = wildCards.reduce((accum, wildCard) => {\r\n    if (wildCardRgx.test(wildCard)) {\r\n      const replacement = wildCard.replace(wildCardRgx, '.*');\r\n      accum.push(new RegExp(replacement, 'g'));\r\n    }\r\n    return accum;\r\n  }, []);\r\n  const findMatch = (filePath: string) => {\r\n    if (wildCards.includes(filePath)) {\r\n      return true;\r\n    }\r\n\r\n    let matched = false;\r\n    for (const rgx of regexps) {\r\n      if (rgx.test(filePath)) {\r\n        matched = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return matched;\r\n  };\r\n  const filtered: string[] = lines.filter(line => !!line && !line.includes('- filter'));\r\n  const res: IListEntry[] = filtered.reduce((accum, line) => {\r\n    const arr = line.trim().split(' ').filter(entry => !!entry);\r\n    if (arr.length === 3) {\r\n      const [ offset, size, filePath ] = arr;\r\n      if (findMatch(filePath)) {\r\n        accum.push({ offset, size, filePath });\r\n      }\r\n    }\r\n    return accum;\r\n  }, []);\r\n\r\n  return res;\r\n}\r\n\r\nfunction validateArguments(archivePath: string, bmsScriptPath: string,\r\n                           outPath: string, options: IQBMSOptions): Promise<void> {\r\n  if (path.extname(bmsScriptPath) !== '.bms') {\r\n    // Invalid argument - we were expecting a bms script.\r\n    return Promise.reject(new util.ArgumentInvalid('bmsScriptPath'));\r\n  }\r\n  if (!path.isAbsolute(archivePath)) {\r\n    // The archive's absolute path should've been provided.\r\n    return Promise.reject(new util.ArgumentInvalid('archivePath'));\r\n  }\r\n  if (!path.isAbsolute(outPath)) {\r\n    // outPath must be a directory and point towards an absolute path.\r\n    return Promise.reject(new util.ArgumentInvalid('outPath'));\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction run(command: string, parameters: string[], options: IQBMSOptions): Promise<void> {\r\n  let timer: NodeJS.Timeout;\r\n  let isClosed: boolean = false;\r\n  let lastMessageReceived: number;\r\n  let wstream;\r\n  const createLog = (!!options.createLog || (command === 'l'));\r\n  if (createLog) {\r\n    wstream = fs.createWriteStream(LOG_FILE_PATH);\r\n  }\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    let args = [\r\n      (!!command) ? ' -' + command : undefined,\r\n      (options.allowResize !== undefined)\r\n        ? (!options.allowResize)\r\n          ? '-r'\r\n          : '-r -r'\r\n        : undefined,\r\n      (!!options.quiet) ? '-q' : undefined,\r\n      (!!options.overwrite) ? '-o' : undefined,\r\n      (!!options.caseSensitive) ? '-I' : undefined,\r\n      (!!options.keepTemporaryFiles) ? '-T' : undefined,\r\n      (!!options.wildCards) ? '-f ' + quote(FILTER_FILE_PATH) : undefined,\r\n    ];\r\n\r\n    args = args.filter(arg => arg !== undefined).concat(parameters);\r\n    let process;\r\n    // const theCommand = path.join(__dirname, 'quickbms_4gb_files.exe') + args.join(' ');\r\n    try {\r\n      process = spawn(quote(path.join(__dirname, 'quickbms_4gb_files.exe')),\r\n      args, {\r\n        shell: true,\r\n      });\r\n    } catch (err) {\r\n      return reject(err);\r\n    }\r\n\r\n    if (timer === undefined) {\r\n      lastMessageReceived = Date.now();\r\n      timer = setTimeout(() => checkTimer(), CHECK_TIME_MSEC);\r\n    }\r\n\r\n    const onNewMessage = () => {\r\n      lastMessageReceived = Date.now();\r\n    };\r\n\r\n    const stdInErrs: string[] = [];\r\n    const checkTimer = () => {\r\n      if ((lastMessageReceived + TIMEOUT_MSEC) <= Date.now()) {\r\n        process.kill();\r\n        clearTimeout(timer);\r\n        timer = undefined;\r\n      } else {\r\n        // We haven't received any messages back from the qbms process\r\n        //  in 5 seconds. This is generally a sign that qbms is stuck.\r\n        //  Hitting any keyboard key will revive the process (even when\r\n        //  running it manually); we're going to attempt to simulate\r\n        //  a spacebar key press which should force the process back into\r\n        //  gear.\r\n        if (!isClosed) {\r\n          try {\r\n            process.stdin.write('\\x20', (err: Error) => {\r\n              stdInErrs.push(JSON.stringify(err, undefined, 2));\r\n            });\r\n            timer = setTimeout(() => checkTimer(), CHECK_TIME_MSEC);\r\n          } catch (err) {\r\n            isClosed = true;\r\n            log('error', 'failed to send keep alive', err);\r\n            clearTimeout(timer);\r\n            timer = undefined;\r\n          }\r\n        } else {\r\n          clearTimeout(timer);\r\n          timer = undefined;\r\n        }\r\n      }\r\n    };\r\n\r\n    const stdOutLines: string[] = [];\r\n    const stdErrLines: string[] = [];\r\n\r\n    process.on('error', (err) => {\r\n      if (createLog) {\r\n        wstream.close();\r\n      }\r\n      return reject(err);\r\n    });\r\n\r\n    process.on('close', (code, signal) => {\r\n      // stdio streams are now closed.\r\n      isClosed = true;\r\n      if (signal === 'SIGTERM') {\r\n        if (!createLog) {\r\n          // We timed out - We want this logged regardless of whether\r\n          //  the create log switch has been provided!\r\n          wstream = fs.createWriteStream(LOG_FILE_PATH);\r\n        }\r\n        const timeoutDump = [].concat(['QBMS has timed out!'], stdErrLines, stdOutLines, stdInErrs);\r\n        timeoutDump.forEach(line => wstream.write(line + '\\n'));\r\n\r\n        wstream.close();\r\n        wstream = undefined;\r\n        // tslint:disable-next-line: max-line-length\r\n        return reject(new QuickBMSError(`quickbms(${signal}) - ${QUICK_BMS_ERRORMSG[14]}`, stdErrLines));\r\n      }\r\n\r\n      if (!!wstream) {\r\n        wstream.close();\r\n        wstream = undefined;\r\n      }\r\n\r\n      if (code !== 0) {\r\n        const errorMsg = (code > QUICK_BMS_ERRORMSG.length - 1)\r\n          ? QUICK_BMS_ERRORMSG[1]\r\n          : QUICK_BMS_ERRORMSG[code];\r\n        return reject(new QuickBMSError(`quickbms(${code}) - ` + errorMsg, stdErrLines));\r\n      }\r\n\r\n      const hasErrors = stdErrLines.find(line =>\r\n        line.indexOf('Error:') !== -1) !== undefined;\r\n      if (hasErrors) {\r\n        return reject(new Error(stdErrLines.join('\\n')));\r\n      }\r\n      return resolve();\r\n    });\r\n\r\n    process.stdout.on('data', data => {\r\n      onNewMessage();\r\n      const formatted = data.toString().split('\\n');\r\n      formatted.forEach(line => {\r\n        const formattedLine = line.replace(/\\\\/g, '/');\r\n        stdOutLines.push(formattedLine);\r\n        if (createLog) {\r\n          wstream.write(formattedLine + '\\n');\r\n        }\r\n      });\r\n    });\r\n\r\n    process.stderr.on('data', data => {\r\n      onNewMessage();\r\n      const formatted = data.toString().split('\\n');\r\n      formatted.forEach(line => {\r\n        stdErrLines.push(line);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction createFiltersFile(wildCards: string[]): Promise<void> {\r\n  return fs.ensureDirAsync(path.dirname(FILTER_FILE_PATH))\r\n    .then(() => fs.writeFileAsync(FILTER_FILE_PATH, wildCards.join('\\n'))\r\n    .then(() => Promise.resolve())\r\n    .catch(err => Promise.reject(err)));\r\n}\r\n\r\nfunction removeFiltersFile(): Promise<void> {\r\n  return fs.statAsync(FILTER_FILE_PATH)\r\n    .then(() => fs.removeAsync(FILTER_FILE_PATH))\r\n    .catch(err => (err.code === 'ENOENT')\r\n      ? Promise.resolve()\r\n      : Promise.reject(err));\r\n}\r\n\r\nfunction reImport(props: IQBMSOpProps): Promise<void> {\r\n  const { archivePath, bmsScriptPath, qbmsOptions, operationPath } = props;\r\n  return validateArguments(archivePath, bmsScriptPath, operationPath, qbmsOptions)\r\n    .then(() => (!!qbmsOptions.wildCards)\r\n      ? createFiltersFile(qbmsOptions.wildCards)\r\n      : Promise.resolve())\r\n    .then(() => (qbmsOptions.allowResize !== undefined)\r\n      ? Promise.resolve()\r\n      : Promise.reject(new util.ArgumentInvalid('Re-import version was not specified')))\r\n    .then(() => run('w',\r\n      [ quote(bmsScriptPath), quote(archivePath), quote(operationPath) ], qbmsOptions))\r\n    .then(() => removeFiltersFile());\r\n}\r\n\r\nfunction extract(props: IQBMSOpProps): Promise<void> {\r\n  const { archivePath, bmsScriptPath, qbmsOptions, operationPath } = props;\r\n  return validateArguments(archivePath, bmsScriptPath, operationPath, qbmsOptions)\r\n    .then(() => (!!qbmsOptions.wildCards)\r\n      ? createFiltersFile(qbmsOptions.wildCards)\r\n      : undefined)\r\n    .then(() => run(undefined,\r\n      [ quote(bmsScriptPath), quote(archivePath), quote(operationPath) ], qbmsOptions))\r\n    .then(() => removeFiltersFile());\r\n}\r\n\r\nfunction list(props: IQBMSOpProps): Promise<IListEntry[]> {\r\n  const { archivePath, bmsScriptPath, qbmsOptions, operationPath } = props;\r\n  return validateArguments(archivePath, bmsScriptPath, operationPath, qbmsOptions)\r\n    .then(() => (!!qbmsOptions.wildCards)\r\n      ? createFiltersFile(qbmsOptions.wildCards)\r\n      : Promise.resolve())\r\n    .then(() => run('l',\r\n      [ quote(bmsScriptPath), quote(archivePath), quote(operationPath) ], qbmsOptions))\r\n    .then(() => removeFiltersFile())\r\n    .then(() => fs.readFileAsync(LOG_FILE_PATH, { encoding: 'utf-8' }))\r\n    .then(data => {\r\n      const fileEntries: IListEntry[] = parseList(data, qbmsOptions.wildCards);\r\n      return Promise.resolve(fileEntries);\r\n    });\r\n}\r\n\r\nfunction write(props: IQBMSOpProps): Promise<void> {\r\n  const { archivePath, bmsScriptPath, qbmsOptions, operationPath } = props;\r\n  return validateArguments(archivePath, bmsScriptPath, operationPath, qbmsOptions)\r\n    .then(() => run('w',\r\n      [ quote(bmsScriptPath), quote(archivePath), quote(operationPath) ], qbmsOptions));\r\n}\r\n\r\nmodule.exports = {\r\n  reImport,\r\n  list,\r\n  write,\r\n  extract,\r\n};\r\n","import Promise from 'bluebird';\n\nexport class QuickBMSError extends Error {\n  private mErrorLines: string;\n  constructor(message: string, stdErrLines: string[]) {\n    super(message);\n    this.name = 'QuickBMSError';\n\n    // We probably only care for the last ~40 lines which will\n    //  generally contain some sort of clue as to what actually happened.\n    //  stdErr output from QBMS can be hundreds if not thousands of lines\n    //  long (depending on how many mods the user had installed) which\n    //  can cause the array to get truncated \"<long array cut>\"\n    const filtered = this.trimContact(stdErrLines);\n    this.mErrorLines = (filtered.length > 40)\n      ? filtered.slice(filtered.length - 40).join('\\n')\n      : filtered.join('\\n');\n  }\n\n  public get errorLines(): string {\n    return this.mErrorLines;\n  }\n\n  private trimContact(stdErrLines: string[]): string[] {\n    // This function intends to trim error lines containing\n    //  Luigi's contact details when an error occurrs - this is not\n    //  to remove attribution, but rather to try and limit the amount\n    //  of spam Luigi might be getting from our users.\n    // @Luigi, if for whatever reason you like the spam and wish us to\n    //  re-instate this information - let us know.\n    // The attribution dashlet will remain in place, crediting QBMS's\n    //  creator, Luigi Auriemma.\n    return stdErrLines.filter((line, idx) => (idx > 10)\n      ? true : !line.toLowerCase().includes('luigi'));\n  }\n}\n\nexport class UnregisteredGameError extends Error {\n  constructor(gameMode: string) {\n    super(`${gameMode} is not a qbms registered game`);\n  }\n}\n\nexport type QBMSOperationType = 'extract' | 'reimport' | 'write' | 'list';\n\nexport interface IQBMSOptions {\n  // qbms will overwrite any existing files during extraction.\n  overwrite?: boolean;\n\n  // qbms verbose mode\n  verbose?: boolean;\n\n  // do we want qbms to log all of its operations\n  createLog?: boolean;\n\n  // qbms is case _in_sensitive by default\n  caseSensitive?: boolean;\n\n  // minimal information output during qbms operations (some output may still be generated)\n  quiet?: boolean;\n\n  // By default qbms will delete any temporary files generated by the .bms scripts\n  //  it executes. This option ensures that qbms does not remove those automatically.\n  keepTemporaryFiles?: boolean;\n\n  // The allow resize paremeter controls QBMS's reimport process which attempts\n  // to replace files within a game's archive. When set to true it will use \"reimport2\"\n  //  and the regular \"reimport\" when set to false.\n  //  qbms offers two reimport types, \"reimport\" and \"reimport2\";\n  //  - When using the default \"reimport\" type it's important to ensure that\n  //    the files you're using as replacements are not larger than the original files!!\n  //  - Use \"reimport2\" if the replacement files are larger than the original files but be\n  //    wary that this may be a _one_ time reimport as it may throw off any existing\n  //    BMS scripts because size/offset would have changed.\n  allowResize?: boolean;\n\n  // file wildcards: both {} and * are valid, although {} is less error prone.\n  wildCards?: string[];\n}\n\nexport interface IListEntry {\n  offset: string;\n  size: string;\n  filePath: string;\n}\n\nexport interface IQBMSOpProps {\n  // The Nexus Mods domain name for the game\n  //  in question.\n  gameMode: string;\n\n  // Absolute path to the BMS script to be used\n  //  for this QBMS operation.\n  bmsScriptPath: string;\n\n  // Absolute path to the affected archive\n  archivePath: string;\n\n  // Vortex will not inform the user of successful or failed QBMS operations.\n  //  The generated error will still be forwarded to the calling extension, thus\n  //  transferring all error handling responsibilities to the extension itself.\n  // Note that this property will not affect QBMS's own verbosity!\n  quiet?: boolean\n\n  // QBMS specific options.\n  qbmsOptions?: IQBMSOptions;\n\n  // The operation path has different uses depending\n  //  on the QBMS operation we're using. e.g. qbmsExtract\n  //  will extract the contents of an archive to operationPath\n  //  while reimport will attempt to insert the contents of\n  //  operationPath to the archive.\n  operationPath?: string;\n\n  // Extension specific attachments; should only be populated\n  //  by officially supported game extensions.\n  additionalAttachments?: () => Promise<IAttachmentData[]>;\n\n  // Callback functor called once QBMS finishes its operations.\n  callback?: (err: Error, data: any) => void;\n}\n\nexport interface IAttachmentData {\n  filePath: string;\n  description: string;\n}\n","module.exports = require(\"bluebird\");","module.exports = require(\"child_process\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-i18next\");","module.exports = require(\"vortex-api\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}