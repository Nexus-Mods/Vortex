{"version":3,"file":"index.js","mappings":";;;;;;;;;AAAA,SAAS,mBAAO,CAAC,cAAI;AACrB;AACA;AACA,SAAS,mBAAO,CAAC,qDAAc;AAC/B,EAAE;AACF,SAAS,mBAAO,CAAC,+CAAW;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;ACxDA;AACA;;AAEA,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACxCA;AACA;;AAEA,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;;;;;;;;;;ACzCA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,kBAAM;AACzB,0BAA0B;AAC1B,YAAY,mBAAO,CAAC,4CAAO;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8DAA8D,KAAK,KAAK;AACxE;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;A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","sources":["webpack://common-interpreters/./node_modules/isexe/index.js","webpack://common-interpreters/./node_modules/isexe/mode.js","webpack://common-interpreters/./node_modules/isexe/windows.js","webpack://common-interpreters/./node_modules/which/which.js","webpack://common-interpreters/./src/platform.ts","webpack://common-interpreters/external commonjs2 \"fs\"","webpack://common-interpreters/external node-commonjs \"os\"","webpack://common-interpreters/external commonjs2 \"path\"","webpack://common-interpreters/external node-commonjs \"process\"","webpack://common-interpreters/external commonjs2 \"vortex-api\"","webpack://common-interpreters/webpack/bootstrap","webpack://common-interpreters/./src/index.ts"],"sourcesContent":["var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","module.exports = which\nwhich.sync = whichSync\n\nvar isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nvar path = require('path')\nvar COLON = isWindows ? ';' : ':'\nvar isexe = require('isexe')\n\nfunction getNotFoundError (cmd) {\n  var er = new Error('not found: ' + cmd)\n  er.code = 'ENOENT'\n\n  return er\n}\n\nfunction getPathInfo (cmd, opt) {\n  var colon = opt.colon || COLON\n  var pathEnv = opt.path || process.env.PATH || ''\n  var pathExt = ['']\n\n  pathEnv = pathEnv.split(colon)\n\n  var pathExtExe = ''\n  if (isWindows) {\n    pathEnv.unshift(process.cwd())\n    pathExtExe = (opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM')\n    pathExt = pathExtExe.split(colon)\n\n\n    // Always test the cmd itself first.  isexe will check to make sure\n    // it's found in the pathExt set.\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  if (cmd.match(/\\//) || isWindows && cmd.match(/\\\\/))\n    pathEnv = ['']\n\n  return {\n    env: pathEnv,\n    ext: pathExt,\n    extExe: pathExtExe\n  }\n}\n\nfunction which (cmd, opt, cb) {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var pathExtExe = info.extExe\n  var found = []\n\n  ;(function F (i, l) {\n    if (i === l) {\n      if (opt.all && found.length)\n        return cb(null, found)\n      else\n        return cb(getNotFoundError(cmd))\n    }\n\n    var pathPart = pathEnv[i]\n    if (pathPart.charAt(0) === '\"' && pathPart.slice(-1) === '\"')\n      pathPart = pathPart.slice(1, -1)\n\n    var p = path.join(pathPart, cmd)\n    if (!pathPart && (/^\\.[\\\\\\/]/).test(cmd)) {\n      p = cmd.slice(0, 2) + p\n    }\n    ;(function E (ii, ll) {\n      if (ii === ll) return F(i + 1, l)\n      var ext = pathExt[ii]\n      isexe(p + ext, { pathExt: pathExtExe }, function (er, is) {\n        if (!er && is) {\n          if (opt.all)\n            found.push(p + ext)\n          else\n            return cb(null, p + ext)\n        }\n        return E(ii + 1, ll)\n      })\n    })(0, pathExt.length)\n  })(0, pathEnv.length)\n}\n\nfunction whichSync (cmd, opt) {\n  opt = opt || {}\n\n  var info = getPathInfo(cmd, opt)\n  var pathEnv = info.env\n  var pathExt = info.ext\n  var pathExtExe = info.extExe\n  var found = []\n\n  for (var i = 0, l = pathEnv.length; i < l; i ++) {\n    var pathPart = pathEnv[i]\n    if (pathPart.charAt(0) === '\"' && pathPart.slice(-1) === '\"')\n      pathPart = pathPart.slice(1, -1)\n\n    var p = path.join(pathPart, cmd)\n    if (!pathPart && /^\\.[\\\\\\/]/.test(cmd)) {\n      p = cmd.slice(0, 2) + p\n    }\n    for (var j = 0, ll = pathExt.length; j < ll; j ++) {\n      var cur = p + pathExt[j]\n      var is\n      try {\n        is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n","import * as os from 'os';\nimport * as path from 'path';\n\n/**\n * Platform detection utilities for gamestore extensions\n */\n\nexport function getPlatform(): string {\n  return process.platform;\n}\n\nexport function isWindows(): boolean {\n  return process.platform === 'win32';\n}\n\nexport function isMacOS(): boolean {\n  return process.platform === 'darwin';\n}\n\nexport function isLinux(): boolean {\n  return process.platform === 'linux';\n}\n\nexport function isUnixLike(): boolean {\n  return process.platform !== 'win32';\n}\n\nexport function getExecutableExtension(): string {\n  return isWindows() ? '.exe' : '';\n}\n\nexport function getPathSeparator(): string {\n  return isWindows() ? '\\\\' : '/';\n}\n\nexport function getLineEnding(): string {\n  return isWindows() ? '\\r\\n' : '\\n';\n}\n\nexport function getWineDriveCPath(): string {\n  return path.join(os.homedir(), '.wine', 'drive_c');\n}\n\nexport function platformSwitch<T>(cases: { windows?: T; macos?: T; linux?: T; default?: T }): T {\n  if (isWindows() && cases.windows !== undefined) return cases.windows;\n  if (isMacOS() && cases.macos !== undefined) return cases.macos;\n  if (isLinux() && cases.linux !== undefined) return cases.linux;\n  if (cases.default !== undefined) return cases.default;\n  throw new Error('No matching platform case and no default provided');\n}\n\nexport function normalizePath(inputPath: string): string {\n  return path.normalize(inputPath).replace(/\\\\/g, '/');\n}\n","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"vortex-api\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as path from 'path';\nimport * as process from 'process';\nimport { log, types, util } from 'vortex-api';\nimport * as which from 'which';\nimport { isWindows, isMacOS, isLinux } from './platform';\n// Platform detection utilities\nconst platformSwitch = <T>(cases: { windows?: T; macos?: T; linux?: T; default?: T }): T => {\n  if (isWindows() && cases.windows !== undefined) return cases.windows;\n  if (isMacOS() && cases.macos !== undefined) return cases.macos;\n  if (isLinux() && cases.linux !== undefined) return cases.linux;\n  return cases.default;\n};\n\n\nfunction exeExtension(): string {\n  return isWindows() ? '.exe' : '';\n}\n\nfunction findJava(): string {\n  if (process.env.JAVA_HOME === undefined) {\n    return undefined;\n  }\n  const fileName = 'java' + exeExtension();\n  // TODO: A bit too simplistic, check the registry on windows\n  return path.join(process.env.JAVA_HOME, 'bin', fileName);\n}\n\nfunction findPython(): string {\n  try {\n    return which.sync('python');\n  } catch (err) {\n    log('info', 'python not found', err.message);\n    return undefined;\n  }\n}\n\nconst javaPath: string = findJava();\nconst pythonPath: string = findPython();\n\nfunction init(context: types.IExtensionContext): boolean {\n  context.registerInterpreter('.jar', (input: types.IRunParameters) => {\n    if (javaPath === undefined) {\n      throw new (util as any).MissingInterpreter('Java isn\\'t installed',\n        'https://www.java.com/de/download/');\n    }\n    return {\n      executable: javaPath,\n      args: ['-jar', input.executable].concat(input.args),\n      options: input.options,\n    };\n  });\n\n  context.registerInterpreter('.vbs', (input: types.IRunParameters) => {\n    return {\n      executable: path.join(process.env.windir, 'system32', 'cscript.exe'),\n      args: [input.executable].concat(input.args),\n      options: input.options,\n    };\n  });\n\n  context.registerInterpreter('.py', (input: types.IRunParameters) => {\n    if (pythonPath === undefined) {\n      throw new (util as any).MissingInterpreter('Python isn\\'t installed',\n        'https://www.python.org/downloads/');\n    }\n    return {\n      executable: pythonPath,\n      args: [input.executable].concat(input.args),\n      options: input.options,\n    };\n  });\n\n  if (process.platform === 'win32') {\n    context.registerInterpreter('.cmd', (input: types.IRunParameters) => {\n      return {\n        executable: 'cmd.exe',\n        args: ['/K', `\"${input.executable}\"`].concat(input.args),\n        options: input.options,\n      };\n    });\n\n    context.registerInterpreter('.bat', (input: types.IRunParameters) => {\n      return {\n        executable: 'cmd.exe',\n        args: ['/K', `\"${input.executable}\"`].concat(input.args),\n        options: {\n          ...input.options,\n          shell: true,\n        },\n      };\n    });\n  }\n  return true;\n}\n\nexport default init;\n"],"names":[],"sourceRoot":""}