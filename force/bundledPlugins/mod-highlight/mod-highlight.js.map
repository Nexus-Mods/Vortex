{"version":3,"file":"index.js","mappings":"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B,mBAAO,CAAC,8BAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB,oCAAoC;AACxD;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,kDAAkD;AAClD;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAe;;;;;;;;;;;ACnEf;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B,mBAAO,CAAC,gEAAyB;AAC3D,wBAAwB,mBAAO,CAAC,4DAAuB;AACvD,kBAAkB,mBAAO,CAAC,mDAAmB;AAC7C,kBAAkB,mBAAO,CAAC,qDAAoB;AAC9C,2BAA2B,mBAAO,CAAC,kEAA0B;AAC7D,aAAa,mBAAO,CAAC,kBAAM;AAC3B,cAAc,mBAAO,CAAC,oBAAO;AAC7B,qBAAqB,mBAAO,CAAC,8BAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gCAAgC;AACnG,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC;AACnF;AACA,uEAAuE,kCAAkC;AACzG;AACA,iEAAiE,UAAU;AAC3E,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,KAAK;AACL,uFAAuF;AACvF;AACA;AACA;AACA,oGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAe","sources":["webpack://mod-highlight/./src/actions/session.ts","webpack://mod-highlight/./src/reducers/session.ts","webpack://mod-highlight/./src/types/types.tsx","webpack://mod-highlight/./src/views/HighlightButton.tsx","webpack://mod-highlight/./src/views/HighlightIconBar.tsx","webpack://mod-highlight/./src/views/TextareaNotes.tsx","webpack://mod-highlight/external commonjs2 \"path\"","webpack://mod-highlight/external commonjs2 \"react\"","webpack://mod-highlight/external commonjs2 \"react-bootstrap\"","webpack://mod-highlight/external commonjs2 \"react-dom\"","webpack://mod-highlight/external commonjs2 \"react-i18next\"","webpack://mod-highlight/external commonjs2 \"react-redux\"","webpack://mod-highlight/external commonjs2 \"redux-act\"","webpack://mod-highlight/external commonjs2 \"vortex-api\"","webpack://mod-highlight/webpack/bootstrap","webpack://mod-highlight/./src/index.tsx"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSelectedMods = exports.setDisplayBatchHighlight = void 0;\nconst redux_act_1 = require(\"redux-act\");\nexports.setDisplayBatchHighlight = (0, redux_act_1.createAction)('SET_DISPLAY_BATCH_HIGHLIGHTER', (display) => display);\nexports.setSelectedMods = (0, redux_act_1.createAction)('SET_HIGHLIGHTER_SELECTED_MODS', (selectedMods) => selectedMods);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sessionReducer = void 0;\nconst vortex_api_1 = require(\"vortex-api\");\nconst actions = require(\"../actions/session\");\nexports.sessionReducer = {\n    reducers: {\n        [actions.setDisplayBatchHighlight]: (state, display) => {\n            return vortex_api_1.util.setSafe(state, ['displayBatchHighlighter'], display);\n        },\n        [actions.setSelectedMods]: (state, selectedMods) => {\n            return vortex_api_1.util.setSafe(state, ['selectedMods'], selectedMods);\n        },\n    },\n    defaults: {\n        selectedMods: [],\n        displayBatchHighlighter: false,\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cssHighlightList = exports.modIcons = exports.HighlightBase = void 0;\nconst React = require(\"react\");\nconst react_bootstrap_1 = require(\"react-bootstrap\");\nconst vortex_api_1 = require(\"vortex-api\");\nclass HighlightBase extends vortex_api_1.ComponentEx {\n    constructor() {\n        super(...arguments);\n        this.setRef = (ref) => {\n            this.mRef = ref;\n        };\n    }\n    renderHighlightColor(highlightColor, onClick) {\n        return (React.createElement(react_bootstrap_1.Button, { type: 'button', key: highlightColor, className: 'highlight-base ' + highlightColor, id: highlightColor, value: highlightColor, onClick: onClick },\n            React.createElement(vortex_api_1.Icon, { name: highlightColor === 'highlight-default' ? 'remove' : 'add' })));\n    }\n    renderPopover(popProps) {\n        const { t } = this.props;\n        const { toggleColors, toggleIcons } = popProps;\n        return React.createElement(react_bootstrap_1.Popover, { id: 'popover-highlight-settings', title: t('Highlight Settings') },\n            React.createElement(react_bootstrap_1.FormGroup, { key: 'some-form' },\n                React.createElement(react_bootstrap_1.ControlLabel, null, t('Select theme')),\n                React.createElement(\"div\", { key: 'dialog-form-colors' }, exports.cssHighlightList.map((highlightColor) => {\n                    return this.renderHighlightColor(highlightColor, toggleColors);\n                })),\n                React.createElement(react_bootstrap_1.ControlLabel, null, t('Select mod icon')),\n                React.createElement(\"div\", { className: 'highlight-icons' }, exports.modIcons.map(icon => this.renderIcons(icon, toggleIcons)))));\n    }\n    renderIcons(icon, onClick) {\n        return (React.createElement(react_bootstrap_1.Button, { type: 'button', key: icon, className: 'btn-embed', id: icon, value: icon, onClick: onClick },\n            React.createElement(vortex_api_1.Icon, { name: icon })));\n    }\n    get bounds() {\n        return {\n            top: 0,\n            left: 0,\n            bottom: window.innerHeight,\n            right: window.innerWidth,\n            height: window.innerHeight,\n            width: window.innerWidth,\n        };\n    }\n}\nexports.HighlightBase = HighlightBase;\nexports.modIcons = [\n    'highlight-conflict',\n    'highlight-patch',\n    'highlight-shield',\n    'highlight-map',\n    'highlight-lab',\n    'highlight-flag',\n    'highlight-temple',\n    'highlight-home',\n    'highlight-person',\n    'highlight-visuals',\n    'highlight-tool',\n    'highlight-ui',\n    'highlight'\n];\nexports.cssHighlightList = [\n    'highlight-1',\n    'highlight-2',\n    'highlight-3',\n    'highlight-4',\n    'highlight-5',\n    'highlight-6',\n    'highlight-7',\n    'highlight-8',\n    'highlight-default',\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst react_bootstrap_1 = require(\"react-bootstrap\");\nconst ReactDOM = require(\"react-dom\");\nconst react_i18next_1 = require(\"react-i18next\");\nconst react_redux_1 = require(\"react-redux\");\nconst vortex_api_1 = require(\"vortex-api\");\nconst types_1 = require(\"../types/types\");\nclass HighlightButton extends types_1.HighlightBase {\n    constructor(props) {\n        super(props);\n        this.toggleIcon = (evt) => {\n            const { gameMode, mod, onSetModAttribute } = this.props;\n            onSetModAttribute(gameMode, mod.id, 'icon', evt.currentTarget.id);\n        };\n        this.toggleColors = (color) => {\n            const { gameMode, mod, onSetModAttribute } = this.props;\n            onSetModAttribute(gameMode, mod.id, 'color', color.currentTarget.value);\n        };\n        this.toggleOverlay = () => {\n            this.nextState.showOverlay = !this.state.showOverlay;\n            const node = ReactDOM.findDOMNode(this.mRef);\n            const bounds = this.bounds;\n            this.nextState.up =\n                node.getBoundingClientRect().bottom > ((bounds.top + bounds.height) * 2 / 3);\n        };\n        this.initState({ showOverlay: false, up: false });\n    }\n    render() {\n        const { mod, t } = this.props;\n        if (mod.state !== 'installed') {\n            return null;\n        }\n        const color = vortex_api_1.util.getSafe(mod.attributes, ['color'], '');\n        const icon = vortex_api_1.util.getSafe(mod.attributes, ['icon'], '');\n        const popoverBottom = this.state.showOverlay\n            ? this.renderPopover({ toggleIcons: this.toggleIcon, toggleColors: this.toggleColors })\n            : null;\n        return (React.createElement(\"div\", { style: { textAlign: 'center' } },\n            this.state.showOverlay ? (React.createElement(react_bootstrap_1.Overlay, { rootClose: true, placement: this.state.up ? 'top' : 'bottom', onHide: this.toggleOverlay, show: this.state.showOverlay, target: this.mRef }, popoverBottom)) : null,\n            React.createElement(vortex_api_1.tooltip.IconButton, { ref: this.setRef, className: 'highlight-base ' + (color !== '' ? color : 'highlight-default'), icon: icon !== '' ? icon : 'highlight', id: mod.id, tooltip: t('Change Icon'), onClick: this.toggleOverlay })));\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        gameMode: vortex_api_1.selectors.activeGameId(state),\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onSetModAttribute: (gameMode, modId, attributeId, value) => {\n            dispatch(vortex_api_1.actions.setModAttribute(gameMode, modId, attributeId, value));\n        },\n    };\n}\nexports.default = (0, react_i18next_1.withTranslation)(['common'])((0, react_redux_1.connect)(mapStateToProps, mapDispatchToProps)(HighlightButton));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst session_1 = require(\"../actions/session\");\nconst types_1 = require(\"../types/types\");\nconst React = require(\"react\");\nconst react_bootstrap_1 = require(\"react-bootstrap\");\nconst react_i18next_1 = require(\"react-i18next\");\nconst react_redux_1 = require(\"react-redux\");\nconst vortex_api_1 = require(\"vortex-api\");\nclass HighlightIconBar extends types_1.HighlightBase {\n    constructor(props) {\n        super(props);\n        this.toggleIcon = (evt) => {\n            const { gameMode, selectedMods, onSetModAttributes } = this.props;\n            onSetModAttributes(gameMode, selectedMods, 'icon', evt.currentTarget.id);\n        };\n        this.toggleColors = (color) => {\n            const { gameMode, selectedMods, onSetModAttributes } = this.props;\n            onSetModAttributes(gameMode, selectedMods, 'color', color.currentTarget.value);\n        };\n        this.toggleOverlay = () => {\n            const { onToggleBatchHiglighter, showOverlay } = this.props;\n            onToggleBatchHiglighter(!showOverlay);\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const popoverBottom = this.props.showOverlay\n            ? this.renderPopover({ toggleIcons: this.toggleIcon, toggleColors: this.toggleColors })\n            : null;\n        return (React.createElement(\"div\", { style: { height: '100%' } },\n            this.props.showOverlay ? (React.createElement(react_bootstrap_1.Overlay, { rootClose: true, placement: 'top', onHide: this.toggleOverlay, show: this.props.showOverlay, target: this.mRef }, popoverBottom)) : null,\n            React.createElement(vortex_api_1.ToolbarIcon, { className: 'highlight-default', text: 'Highlight Mods', ref: this.setRef, icon: 'highlight', tooltip: t('Highlight your mods'), onClick: this.toggleOverlay })));\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        selectedMods: vortex_api_1.util.getSafe(state, ['session', 'modhighlight', 'selectedMods'], []),\n        showOverlay: vortex_api_1.util.getSafe(state, ['session', 'modhighlight', 'displayBatchHighlighter'], false),\n        gameMode: vortex_api_1.selectors.activeGameId(state),\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onSetModAttribute: (gameMode, modId, attributeId, value) => {\n            dispatch(vortex_api_1.actions.setModAttribute(gameMode, modId, attributeId, value));\n        },\n        onSetModAttributes: (gameMode, modIds, attributeId, value) => {\n            vortex_api_1.util.batchDispatch(dispatch, modIds.map(modId => vortex_api_1.actions.setModAttribute(gameMode, modId, attributeId, value)));\n        },\n        onToggleBatchHiglighter: (enabled) => dispatch((0, session_1.setDisplayBatchHighlight)(enabled)),\n    };\n}\nexports.default = (0, react_i18next_1.withTranslation)(['common'])((0, react_redux_1.connect)(mapStateToProps, mapDispatchToProps)(HighlightIconBar));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst react_i18next_1 = require(\"react-i18next\");\nconst react_redux_1 = require(\"react-redux\");\nconst vortex_api_1 = require(\"vortex-api\");\nclass TextareaNotes extends vortex_api_1.ComponentEx {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            const newValue = event.currentTarget.value;\n            this.nextState.valueCache = newValue;\n            this.mDebouncer.schedule(undefined, newValue);\n        };\n        this.initState({\n            valueCache: this.getValue(props),\n        });\n        this.mDebouncer = new vortex_api_1.util.Debouncer((newNote) => {\n            const { gameMode, mods, onSetModAttribute } = this.props;\n            mods.forEach(mod => {\n                onSetModAttribute(gameMode, mod.id, 'notes', newNote);\n            });\n            return null;\n        }, 5000);\n    }\n    UNSAFE_componentWillReceiveProps(newProps) {\n        const newValue = this.getValue(newProps);\n        if (newValue !== this.state.valueCache) {\n            this.nextState.valueCache = newValue;\n        }\n    }\n    componentWillUnmount() {\n        if (this.state.valueCache !== this.getValue(this.props)) {\n            this.mDebouncer.runNow(undefined, this.state.valueCache);\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.mods !== nextProps.mods\n            || this.props.gameMode !== nextProps.gameMode\n            || this.state !== nextState;\n    }\n    render() {\n        const { t, mods } = this.props;\n        const { valueCache } = this.state;\n        if (mods.find(iter => iter.state !== 'installed') !== undefined) {\n            return null;\n        }\n        return (React.createElement(\"textarea\", { value: valueCache !== null ? valueCache : '', id: mods[0].id, className: 'textarea-notes', onChange: this.handleChange, placeholder: valueCache !== null\n                ? t('Write your own notes on this mod')\n                : t('Multiple values') }));\n    }\n    getValue(props) {\n        const value = vortex_api_1.util.getSafe(props.mods[0].attributes, ['notes'], '');\n        const different = props.mods.find(iter => vortex_api_1.util.getSafe(iter, ['attributes', 'notes'], '') !== value) !== undefined;\n        return different ? null : value;\n    }\n}\nfunction mapStateToProps(state) {\n    return {};\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onSetModAttribute: (gameMode, modId, attributeId, value) => {\n            dispatch(vortex_api_1.actions.setModAttribute(gameMode, modId, attributeId, value));\n        },\n    };\n}\nexports.default = (0, react_i18next_1.withTranslation)(['common'])((0, react_redux_1.connect)(mapStateToProps, mapDispatchToProps)(TextareaNotes));\n","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-i18next\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux-act\");","module.exports = require(\"vortex-api\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst HighlightButton_1 = require(\"./views/HighlightButton\");\nconst TextareaNotes_1 = require(\"./views/TextareaNotes\");\nconst session_1 = require(\"./actions/session\");\nconst session_2 = require(\"./reducers/session\");\nconst HighlightIconBar_1 = require(\"./views/HighlightIconBar\");\nconst path = require(\"path\");\nconst React = require(\"react\");\nconst vortex_api_1 = require(\"vortex-api\");\nfunction init(context) {\n    context.registerReducer(['session', 'modhighlight'], session_2.sessionReducer);\n    context.registerTableAttribute('mods', {\n        id: 'notes',\n        description: 'Mod Notes',\n        icon: 'sticky-note',\n        placement: 'detail',\n        supportsMultiple: true,\n        customRenderer: (mods) => {\n            const gameMode = vortex_api_1.selectors.activeGameId(context.api.store.getState());\n            return (React.createElement(TextareaNotes_1.default, { gameMode: gameMode, mods: mods }));\n        },\n        calc: (mod) => vortex_api_1.util.getSafe(mod.attributes, ['notes'], ''),\n        isToggleable: false,\n        edit: {},\n        isSortable: false,\n    });\n    context.registerTableAttribute('mods', {\n        id: 'modHighlight',\n        name: 'Highlight',\n        description: 'Mod Highlight',\n        icon: 'lightbulb-o',\n        placement: 'table',\n        customRenderer: (mod) => {\n            const note = vortex_api_1.util.getSafe(mod.attributes, ['notes'], undefined);\n            return (React.createElement(\"div\", { className: 'highlight-container' },\n                (!!note && (note.length > 0))\n                    ? React.createElement(vortex_api_1.tooltip.Icon, { tooltip: note, name: 'changelog' })\n                    : null,\n                React.createElement(HighlightButton_1.default, { mod: mod })));\n        },\n        calc: (mod) => vortex_api_1.util.getSafe(mod.attributes, ['icon'], '')\n            + ' - ' + vortex_api_1.util.getSafe(mod.attributes, ['color'], '')\n            + ' - ' + vortex_api_1.util.getSafe(mod.attributes, ['notes'], ''),\n        isToggleable: true,\n        edit: {},\n        isSortable: true,\n        isDefaultVisible: false,\n    });\n    context.registerAction('mods-multirow-actions', 300, HighlightIconBar_1.default, {}, undefined, instanceIds => {\n        const state = context.api.store.getState();\n        const profile = vortex_api_1.selectors.activeProfile(state);\n        if (profile !== undefined) {\n            const mods = vortex_api_1.util.getSafe(state, ['persistent', 'mods', profile.gameId], {});\n            const selectedMods = Object.keys(mods)\n                .filter(key => instanceIds.includes(key) && mods[key].state === 'installed');\n            context.api.store.dispatch((0, session_1.setSelectedMods)(selectedMods));\n        }\n        return true;\n    });\n    context.once(() => {\n        context.api.setStylesheet('mod-highlight', path.join(__dirname, 'mod-highlight.scss'));\n    });\n    return true;\n}\nexports.default = init;\n"],"names":[],"sourceRoot":""}