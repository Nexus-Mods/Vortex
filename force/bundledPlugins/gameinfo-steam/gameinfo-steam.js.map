{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,mCAAmC,mBAAO,CAAC,0BAAU;AACrD,qBAAqB,mBAAO,CAAC,8BAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,qBAAqB;AACjG,kFAAkF,KAAK;AACvF;AACA,KAAK;AACL;AACA;AACA;AACA,oFAAoF,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,iFAAiF,mCAAmC;AACpH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;;;ACjHf;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://gameinfo-steam/./src/index.ts","webpack://gameinfo-steam/external commonjs2 \"bluebird\"","webpack://gameinfo-steam/external commonjs2 \"vortex-api\"","webpack://gameinfo-steam/webpack/bootstrap","webpack://gameinfo-steam/webpack/before-startup","webpack://gameinfo-steam/webpack/startup","webpack://gameinfo-steam/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotFound = void 0;\nconst bluebird_1 = __importDefault(require(\"bluebird\"));\nconst vortex_api_1 = require(\"vortex-api\");\nclass NotFound extends Error {\n    constructor() {\n        super('not found');\n        this.name = this.constructor.name;\n    }\n}\nexports.NotFound = NotFound;\nfunction safeGetTimestamp(input) {\n    if (input === null) {\n        return null;\n    }\n    return input.getTime();\n}\nfunction findLocalInfo(game) {\n    let normalize;\n    if (game.path === undefined) {\n        if ((game.details !== undefined) && (game.details['steamAppId'])) {\n            return bluebird_1.default.resolve({\n                appid: game.details['steamAppId'],\n                lastUpdated: null,\n            });\n        }\n        else {\n            return bluebird_1.default.reject(new NotFound());\n        }\n    }\n    return vortex_api_1.util.getNormalizeFunc(game.path)\n        .then(normalizeFunc => {\n        normalize = normalizeFunc;\n        return vortex_api_1.util.steam.allGames();\n    })\n        .then((entries) => {\n        const searchPath = normalize(game.path);\n        const steamGame = entries.find(entry => normalize(entry.gamePath) === searchPath);\n        if (steamGame === undefined) {\n            if ((game.details !== undefined) && (game.details['steamAppId'] !== undefined)) {\n                return bluebird_1.default.resolve({\n                    appid: game.details['steamAppId'],\n                    lastUpdated: null,\n                });\n            }\n            else {\n                return bluebird_1.default.reject(new NotFound());\n            }\n        }\n        else {\n            return bluebird_1.default.resolve({\n                appid: steamGame.appid,\n                lastUpdated: steamGame.lastUpdated !== undefined\n                    ? new Date(steamGame.lastUpdated)\n                    : null,\n            });\n        }\n    });\n}\nfunction queryGameSteam(api, game) {\n    let foundSteamGame;\n    return findLocalInfo(game)\n        .then(localInfo => {\n        foundSteamGame = localInfo;\n        const url = `https://store.steampowered.com/api/appdetails?appids=${foundSteamGame.appid}`;\n        (0, vortex_api_1.log)('debug', 'requesting game info from steam store', { url });\n        return vortex_api_1.util.jsonRequest(url);\n    })\n        .then((dat) => {\n        dat = dat[foundSteamGame.appid];\n        if (dat['success'] !== true) {\n            (0, vortex_api_1.log)('warn', 'steam store request was unsuccessful', { dat });\n            return {};\n        }\n        dat = dat['data'];\n        const ret = {\n            release_date: {\n                title: 'Release Date',\n                value: vortex_api_1.util.getSafe(dat, ['release_date', 'date'], null),\n                type: 'date',\n            },\n            last_updated: {\n                title: 'Last Updated',\n                value: safeGetTimestamp(foundSteamGame.lastUpdated),\n                type: 'date',\n            },\n            website: {\n                title: 'Website',\n                value: vortex_api_1.util.getSafe(dat, ['website'], null),\n                type: 'url',\n            },\n            metacritic_score: {\n                title: 'Score (Metacritic)',\n                value: vortex_api_1.util.getSafe(dat, ['metacritic', 'score'], null),\n            },\n        };\n        return ret;\n    })\n        .catch(err => {\n        if (!(err instanceof NotFound)) {\n            (0, vortex_api_1.log)('warn', 'failed to request info from steam', { gameId: game.id, err: err.message });\n        }\n        return {};\n    });\n}\nfunction main(context) {\n    context.registerGameInfoProvider('steam', 50, 604800000, ['release_date', 'last_updated', 'website', 'metacritic_score'], game => queryGameSteam(context.api, game));\n    return true;\n}\nexports.default = main;\n","module.exports = require(\"bluebird\");","module.exports = require(\"vortex-api\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}