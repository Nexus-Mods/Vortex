{"version":3,"file":"index.js","mappings":"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","sources":["webpack://modtype-dazip/./src/constants.ts","webpack://modtype-dazip/./src/index.ts","webpack://modtype-dazip/./src/migrations.ts","webpack://modtype-dazip/external commonjs2 \"bluebird\"","webpack://modtype-dazip/external commonjs2 \"path\"","webpack://modtype-dazip/external commonjs2 \"semver\"","webpack://modtype-dazip/external commonjs2 \"vortex-api\"","webpack://modtype-dazip/webpack/bootstrap","webpack://modtype-dazip/webpack/before-startup","webpack://modtype-dazip/webpack/startup","webpack://modtype-dazip/webpack/after-startup"],"sourcesContent":["import path from 'path';\nimport { selectors, types, util } from 'vortex-api';\n\ninterface IDAGame {\n  id: string;\n  modPath: string;\n  getAddinsFolder?: (api: types.IExtensionApi) => string;\n}\n\n// Dragon age game information.\nexport const DA_GAMES: { [gameName: string]: IDAGame } = {\n  DragonAge1: {\n    id: 'dragonage',\n    modPath: path.join(util.getVortexPath('documents'), 'BioWare', 'Dragon Age'),\n  },\n  DragonAge2: {\n    id: 'dragonage2',\n    modPath: path.join(util.getVortexPath('documents'), 'BioWare',\n                       'Dragon Age 2'/*, 'packages', 'core', 'override'*/),\n    getAddinsFolder: (api: types.IExtensionApi) => {\n      const state = api.getState();\n      const discovery = selectors.discoveryByGame(state, 'dragonage2');\n      return (discovery?.path)\n        ? path.join(discovery.path, 'addins')\n        : path.join(util.getVortexPath('documents'), 'BioWare',\n            'Dragon Age 2'/*, 'packages', 'core', 'override'*/);\n    },\n  },\n};\n","import Promise from 'bluebird';\r\nimport * as path from 'path';\r\nimport { log, types, selectors, util } from 'vortex-api';\r\n\r\nimport { migrate100 } from './migrations';\r\n\r\nimport { DA_GAMES } from './constants';\r\n\r\nconst DA_MODULE_ERF_SUFFIX = '_module.erf';\r\n\r\nfunction testDazip(instructions: types.IInstruction[]) {\r\n  // we can't (currently) know the files that are inside a dazip, the outer installer\r\n  // has to tell us\r\n  return Promise.resolve(false);\r\n}\r\n\r\nfunction testSupportedOuter(files: string[]) {\r\n  const dazips = files.filter(file => !file.endsWith(path.sep) && path.extname(file) === '.dazip');\r\n  return Promise.resolve({\r\n    supported: dazips.length > 0,\r\n    requiredFiles: dazips,\r\n  });\r\n}\r\n\r\nfunction shortestPath(lhs: string, rhs: string) {\r\n  return lhs.split(path.sep).length - rhs.split(path.sep).length;\r\n}\r\n\r\nfunction testSupportedInner(files: string[], gameId: string) {\r\n  const unsupported = () => Promise.resolve({ supported: false, requiredFiles: [] });\r\n\r\n  if (!isDragonAge(gameId)) {\r\n    return unsupported();\r\n  }\r\n\r\n  if (files.find(file => file.toLowerCase().split(path.sep).includes('contents')) === undefined) {\r\n    return unsupported();\r\n  }\r\n\r\n  const manifests = files.filter(iter => path.basename(iter.toLowerCase()) === 'manifest.xml');\r\n  if (manifests.length === 0) {\r\n    return unsupported();\r\n  }\r\n\r\n  // if there are multiple manifests we only consider the one with the shortest directory tree\r\n  const shortest = (manifests.sort(shortestPath))[0];\r\n  const basePath = path.dirname(shortest);\r\n\r\n  if (basePath !== '.') {\r\n    const extraFiles = files.filter(iter => !iter.startsWith(basePath));\r\n    if (extraFiles.length !== 0) {\r\n      return unsupported();\r\n    }\r\n  }\r\n\r\n  return Promise.resolve({\r\n    supported: true,\r\n    requiredFiles: [],\r\n  });\r\n}\r\n\r\nfunction installOuter(files: string[],\r\n                      destinationPath: string,\r\n                      gameId: string,\r\n                      progressDelegate): Promise<types.IInstallResult> {\r\n  const dazips = files.filter(file => !file.endsWith(path.sep) && path.extname(file) === '.dazip');\r\n  log('debug', 'install nested', dazips);\r\n  const instructions = dazips.map((dazip: string): types.IInstruction => ({\r\n                              type: 'submodule',\r\n                              key: dazip,\r\n                              path: path.join(destinationPath, dazip),\r\n                              submoduleType: 'dazip',\r\n                            }));\r\n  return Promise.resolve({ instructions });\r\n}\r\n\r\n// Dragon Age 2 does not have an official creation kit and any dazip\r\n//  archives targeted at DA2 are created using DA:O's creation kit.\r\n//  Reason why it's safe to assume that both games have the same\r\n//  folder structure.\r\nfunction installInner(files: string[],\r\n                      destinationPath: string,\r\n                      gameId: string,\r\n                      progressDelegate): Promise<types.IInstallResult> {\r\n  const result: types.IInstallResult = {\r\n    instructions: [{\r\n      type: 'setmodtype',\r\n      value: 'dazip',\r\n    }],\r\n  };\r\n\r\n  const manifests = files.filter(iter => path.basename(iter.toLowerCase()) === 'manifest.xml');\r\n  const shortest = (manifests.sort(shortestPath))[0];\r\n  const basePath = path.dirname(shortest);\r\n\r\n  let modName: string;\r\n  const sep = `${path.sep}${path.sep}`;\r\n  const addinsPathRE = new RegExp(['contents', 'addins', `[^${sep}]+`].join(sep) + sep, 'i');\r\n  const addinsPath = files.find(filePath => addinsPathRE.test(filePath));\r\n  if (addinsPath !== undefined) {\r\n    const segments = addinsPath.split(path.sep);\r\n    const addinsIdx = segments.findIndex(seg => seg.toLowerCase() === 'addins');\r\n    modName = segments[addinsIdx + 1];\r\n  } else {\r\n    const moduleERF = files.find(file => path.basename(file).includes(DA_MODULE_ERF_SUFFIX));\r\n    if (moduleERF !== undefined) {\r\n      modName = path.basename(moduleERF).replace(DA_MODULE_ERF_SUFFIX, '');\r\n    }\r\n  }\r\n\r\n  // Go through each file and remove the contents folder.\r\n  files.forEach(filePath => {\r\n    if (filePath.endsWith(path.sep)) {\r\n      // ignore directories\r\n      return;\r\n    }\r\n\r\n    if (filePath === shortest) {\r\n      result.instructions.push({\r\n        type: 'copy',\r\n        source: filePath,\r\n        destination: (modName !== undefined)\r\n          ? path.join('addins', modName, shortest)\r\n          : filePath,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // we already checked that all files are inside basePath in the test function so this\r\n    // second check should be unnecessary\r\n    if ((basePath !== '.') && (filePath.toLowerCase().startsWith(basePath.toLowerCase()))) {\r\n      filePath = filePath.slice(basePath.length + 1);\r\n    }\r\n    let filePathSplit = filePath.split(path.sep);\r\n    if (filePathSplit[0].toLowerCase() === 'contents') {\r\n      filePathSplit = filePathSplit.slice(1);\r\n    }\r\n\r\n    result.instructions.push({\r\n      type: 'copy',\r\n      source: filePath,\r\n      destination: path.join(...filePathSplit),\r\n    });\r\n  });\r\n\r\n  return Promise.resolve(result);\r\n}\r\n\r\nfunction isDragonAge(gameId: string): boolean {\r\n  return [ DA_GAMES.DragonAge1.id, DA_GAMES.DragonAge2.id ].indexOf(gameId) !== -1;\r\n}\r\n\r\nfunction init(context: types.IExtensionContext) {\r\n  const getPath = (game: types.IGame) => {\r\n    if (game.id === DA_GAMES.DragonAge1.id) {\r\n      return DA_GAMES.DragonAge1.getAddinsFolder\r\n        ? DA_GAMES.DragonAge1.getAddinsFolder(context.api)\r\n        : DA_GAMES.DragonAge1.modPath;\r\n    } else if (game.id === DA_GAMES.DragonAge2.id) {\r\n      return DA_GAMES.DragonAge2.getAddinsFolder\r\n        ? DA_GAMES.DragonAge2.getAddinsFolder(context.api)\r\n        : DA_GAMES.DragonAge2.modPath;\r\n    }\r\n  };\r\n\r\n  // incorrectly named mod type. we use this mod type to denote addin-type mods\r\n  // that have to be registered in the Addins.xml file\r\n  context.registerModType('dazip', 25, isDragonAge, getPath, testDazip, {\r\n    name: 'Dragon Age AddIn',\r\n  });\r\n  context.registerInstaller('dazipOuter', 15, testSupportedOuter, installOuter);\r\n  context.registerInstaller('dazipInner', 15, testSupportedInner, installInner);\r\n\r\n  context.registerMigration((old: string) => migrate100(context, old) as any);\r\n\r\n  return true;\r\n}\r\n\r\nexport default init;\r\n","import path from 'path';\nimport semver from 'semver';\nimport { actions, fs, selectors, types, util } from 'vortex-api';\n\nimport { DA_GAMES } from './constants';\n\nexport async function migrate100(context, oldVersion): Promise<void> {\n  if (semver.gte(oldVersion, '1.0.0')) {\n    return Promise.resolve();\n  }\n\n  const da2Game = DA_GAMES.DragonAge2;\n  const state = context.api.getState();\n  const discovery: types.IDiscoveryResult = selectors.discoveryByGame(state, da2Game.id);\n\n  const activatorId = selectors.activatorForGame(state, da2Game.id);\n  const activator = util.getActivator(activatorId);\n  if (!discovery?.path || !activator) {\n    return Promise.resolve();\n  }\n\n  const mods: { [modId: string]: types.IMod } = util.getSafe(state,\n    ['persistent', 'mods', da2Game.id], {});\n  const addins = Object.values(mods).filter(mod => mod.type === 'dazip');\n\n  if (addins.length === 0) {\n    // No mods - no problem.\n    return Promise.resolve();\n  }\n\n  const modsPath = path.join(discovery.path, da2Game.modPath);\n  return context.api.awaitUI()\n    .then(() => fs.ensureDirWritableAsync(modsPath))\n    .then(() => context.api.emitAndAwait('purge-mods-in-path', da2Game.id, 'dazip', modsPath))\n    .then(() => context.api.store.dispatch(actions.setDeploymentNecessary(da2Game.id, true)));\n}\n","module.exports = require(\"bluebird\");","module.exports = require(\"path\");","module.exports = require(\"semver\");","module.exports = require(\"vortex-api\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}